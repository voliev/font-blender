{"version":3,"sources":["serviceWorker.js","components/header/GitHubLink.js","components/header/Header.js","constants/index.js","components/fontsPane/TitleFilter.js","actions/filters.js","components/fontsPane/SortingParameters.js","components/fontsPane/SortingOrder.js","components/fontsPane/SortingFilter.js","components/fontsPane/CategoriesList.js","components/fontsPane/CategoriesFilter.js","components/Spinner.js","reducers/fonts.js","actions/fonts.js","actions/notifications.js","actions/selectedFonts.js","actions/showcase.js","reducers/selectedFonts.js","components/fontsPane/FontInfo.js","components/fontsPane/FontItemControl.js","components/fontsPane/FontItem.js","components/fontsPane/FontItemContainer.js","components/fontsPane/VisibleFonts.js","components/ErrorMessage.js","reducers/filters.js","components/fontsPane/FontsList.js","selectors/fonts.js","components/fontsPane/SelectedFontsHeaderBar.js","components/fontsPane/SelectedFontItem.js","components/fontsPane/SelectedFontsList.js","components/fontsPane/SelectedFontsFooter.js","components/fontsPane/SelectedFonts.js","components/fontsPane/SelectedFontsContainer.js","components/fontsPane/FontsPane.js","reducers/typeScale.js","utils/index.js","reducers/textStyles.js","reducers/background.js","components/showcasePane/Text.js","components/showcasePane/SampleText.js","components/showcasePane/ShowcasePaneHeader.js","components/showcasePane/FontPreviewInfo.js","components/showcasePane/PreviewFontSizeInput.js","components/showcasePane/PreviewFontSizeReset.js","components/showcasePane/FontPreviewVariants.js","components/showcasePane/FontPreviewStyles.js","reducers/showcase.js","components/showcasePane/FontPreview.js","components/showcasePane/CopyToClipboardButton.js","template/styles.js","components/showcasePane/StylesView.js","components/showcasePane/ShowcasePane.js","components/settingsPane/BaseFontSizeInput.js","components/settingsPane/ScaleValueSelectList.js","components/settingsPane/TypeScale.js","components/settingsPane/TypeScaleContainer.js","actions/typeScale.js","actions/textStyles.js","components/settingsPane/StylingPropertySelectList.js","components/settingsPane/StylesInheritanceInput.js","components/settingsPane/ColorPicker.js","components/settingsPane/ElementColor.js","components/settingsPane/Elements.js","components/settingsPane/Background.js","actions/background.js","components/settingsPane/GetCSSButton.js","components/settingsPane/ResetButton.js","actions/styles.js","components/settingsPane/SettingsPaneFooter.js","components/settingsPane/SettingsPane.js","components/Main.js","components/notifications/UndoButton.js","components/notifications/NotificationSnackbar.js","components/notifications/Notifications.js","components/App.js","reducers/styles.js","reducers/notifications.js","store/configureStore.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","React","memo","react_default","a","createElement","aria-label","className","href","rel","target","GitHub_default","fontSize","header_GitHubLink","BUNDLE_SIZE","ELEMENTS","DEFAULT_FONT_SIZE","SCALE_VALUES","1.067","1.125","1.2","1.25","1.333","1.414","1.5","1.618","TitleFilter","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTitleFilterChange","bind","assertThisInitialized","handleClearTitleFilter","inherits","createClass","key","value","e","persist","props","setTitleFilter","iconClasses","classNames","icon","clickable","title","name","onChange","debounce","leading","placeholder","type","onClick","disabled","length","ClearOutlined_default","Search_default","Component","connect","filters","dispatch","arguments","undefined","SortingParameters","_ref","sortingParamChangeHandler","id","map","param","SortingOrder","sortingOrderChangeHandler","ArrowDownwardRounded_default","ArrowUpwardRounded_default","SortingFilter","handleSortingParamChange","handleSortingOrderChange","setSortingParam","currentTarget","setSortingOrder","sorting","fontsPane_SortingParameters","fontsPane_SortingOrder","order","CategoriesList","first","createRef","handleCategoriesFilterChange","setCategoriesFilter","current","focus","_this2","_this$props","animationEndHandler","categories","stage","listClasses","fade-in","fade-out","onAnimationEnd","keys","category","idx","ref","htmlFor","CheckBoxOutlined_default","CheckBoxOutlineBlank_default","checked","replace","toUpperCase","CategoriesFilter","handleAnimationEnd","handleButtonClick","handleOutsideClick","0","1","2","3","setState","getLifecycleStage","animationName","_ref2","buttonClasses","btn","btn-round-big","active","react_outside_click_handler_default","onOutsideClick","FilterList_default","fontsPane_CategoriesList","Spinner","initialState","combineReducers","all","action","fonts","objectSpread","defineProperty","family","updates","fontsDataStatus","getFonts","setFonts","startFetchFontsData","asyncToGenerator","regenerator_default","mark","_callee","apiRequestURL","res","items","wrap","_context","prev","next","concat","process","fetch","sent","json","reduce","result","font","variants","subsets","fetching","requested","prefetched","fetched","abrupt","t0","stop","_x","apply","updateFont","startFetchFont","charRange","getState","requestString","generateRequestString","options","generateRequestOptions","WebFont","load","updatedState","updatedFonts","Promise","resolve","fetchFull","join","weight","includes","parseInt","toString","subset","request","chars","google","families","text","classes","timeout","fontloading","getEventListener","fontactive","fontinactive","event","assign","addNotification","group","removeNotification","addFontToSelected","startRemoveFontFromSelected","removeFontFromSelected","startUndoDeselected","displayShowcaseFontPreview","reducers_selectedFonts","undoable","toConsumableArray","filter","limit","includeAction","undoType","getSelectedFontFamilies","selectedFonts","present","getSelectedFonts","selected","isSelected","FontInfo","fontPreviewClickHandler","fontFamilyStyle","fontFamily","fontFamilyClasses","family-name","react","style","data-family","RemoveRedEyeRounded_default","FontItemControl","stateOptions","fontState","SyncRounded_default","AddCircleRounded_default","CheckCircleRounded_default","_this$props2","fontSelectionDeselectionHandler","requestFont","componentClasses","btnClasses","btn-round-small","add-circle","sync","getFontStateFromProps","getTitleAttributeFromFontState","getControlIconFromFontState","FontItem","fontItem","handleFontSelectionDeselection","handleFontPreviewClick","fetchFont","dataset","startDisplayShowcaseFontPreview","isVisible","previewFontFamily","blank","preview","fontsPane_FontInfo","fontsPane_FontItemControl","PureComponent","showcase","fontPreview","startAddFontToSelected","VisibleFonts","containment","listRef","visibleFonts","adjustBundleSize","empty","src","FontItemContainer","visibility_sensor_default","partialVisibility","intervalDelay","scrollCheck","scrollDelay","ErrorMessage","children","serif","sans-serif","display","monospace","handwriting","reducers_filters","FontsList","bundleLimit","handleFontsDataRequest","listMaxLength","fetchFontsData","prevProps","filteredFonts","slice","components_Spinner","fontsPane_VisibleFonts","components_ErrorMessage","ErrorOutlineRounded_default","filteredFontsSelector","isEqual","titleMatch","toLowerCase","trim","categoryMatch","sortedFonts","sort","b","localeCompare","caseFirst","reverse","createFilteredFontsSelector","getFilters","getFontsDataStatus","SelectedFontsHeaderBar","folded","headerBarClickHandler","ExpandLessRounded_default","ExpandMoreRounded_default","SelectedFontItem","item","handleTransitionEnd","closest","classList","remove","propertyName","fontDeselectionHandler","contains","add","onTransitionEnd","RemoveCircleOutlineRounded_default","SelectedFontsList","fontsPane_SelectedFontItem","SelectedFontsFooter","clearSelectedFontsButtonClickHandler","SelectedFonts","main","handleHeaderBarClick","handleFontDeselection","handleClearSelectedFontsButtonClick","4","5","hasCorrespondingClass","split","some","cn","clearSelectedFonts","transform","clientHeight","prevSelectedFonts","nextProps","nextState","nextSelectedFonts","componentStyles","setComponentsCSSTransform","fontsPane_SelectedFontsHeaderBar","fontsPane_SelectedFontsList","fontsPane_SelectedFontsFooter","FontsPane","fontsPane_TitleFilter","fontsPane_CategoriesFilter","fontsPane_SortingFilter","fontsPane_FontsList","SelectedFontsContainer","scale","getTypeScale","styles","typeScale","variantToStyle","variant","cssPropertyToCamelCased","prop","element","i","generateElementsStyles","textStyles","elementsStyles","exponent","generateElementStylesObject","color","Math","pow","toFixed","fontStyle","fontWeight","getPropertyOptions","property","test","values","push","font-weight","font-style","variantsToStyleOptions","generateOptions","getPropertyValue","camelCasedProp","isControlDisabled","_len","rest","Array","_key","acc","curr","isSettingsPaneDisabled","numberInputChangeHandler","inputValue","defaultValue","min","max","callback","maxDigits","parsedValue","isNaN","inheritStyles","textStylesReducerDefaultState","getTextStyles","getBackground","background","Text","backgroundColor","body","h1","p","h2","li","h3","h4","small","displayShowcaseText","ArrowBackRounded_default","FontPreviewInfo","PreviewFontSizeInput","fontSizeChangeHandler","PreviewFontSizeReset","resetFontSizeHandler","FontPreviewVariants","example","FontPreviewStyles","handleFontSizeChange","handleResetFontSize","resetFontSize","showcasePane_PreviewFontSizeInput","showcasePane_PreviewFontSizeReset","showcasePane_FontPreviewVariants","showcaseState","FontPreview","showSpinner","handleTryAgainButtonClick","showcasePane_FontPreviewInfo","showcasePane_FontPreviewStyles","getPreviewFont","CopyToClipboardButton","clipboard","handleCopySuccess","handleCopyError","clearSelection","notificationActive","Clipboard","on","destroy","data-clipboard-target","FileCopyOutlined_default","notifications","template_styles","collectSelectedFontVariants","elementsValues","generateElementsValues","generateImportString","generateRootElementTemplate","generateElementsTemplate","template","newLine","query","queryStr","fontFamilyQueryStr","delimiter","fontVariantsSorted","elements","_styles$element","_textStyles$element","fontFamilyValue","fontSizeValue","getElementFontSizeVariable","fontStyleValue","StylesView","SyntaxHighlighter","registerLanguage","css","light","language","docco","customStyle","whiteSpace","borderRadius","padding","showcasePane_CopyToClipboardButton","textIsVisible","fontPreviewIsVisible","stylesIsVisible","SampleText","showcasePane_ShowcasePaneHeader","showcasePane_StylesView","showcasePane_FontPreview","scaleChangeHandler","scaleValue","TypeScale","handleScaleChange","setFontSize","setTypeScale","parseFloat","settingsPane_BaseFontSizeInput","settingsPane_ScaleValueSelectList","updateElementStyles","StylingPropertySelectList","handleStylePropertyChange","getStylePropertyValueFromEvent","_this$props3","option","stylesInheritanceChangeHandler","ColorPicker","containerRef","displayColorPicker","handleClick","document","documentElement","getBoundingClientRect","bottom","pickerPositionClass","getPickerPositionClass","pickerClasses","picker","above","below","colorChangeHandler","react_color_lib","disableAlpha","onChangeComplete","colorPicker","getPicker","ElementColor","handleColorChange","hex","settingsPane_ColorPicker","Elements","handleStylesInheritanceChange","setStylesInheritance","settingsPane_StylesInheritanceInput","settingsPane_StylingPropertySelectList","settingsPane_ElementColor","setBackgroundColor","GetCSSButton","getCSSButtonClickHandler","CodeRounded_default","ResetButton","resetButtonClickHandler","startUndoReset","stylesDefaults","isResetDisabled","isGetStylesDisabled","setDefaultStyles","displayStyles","settingsPane_ResetButton","settingsPane_GetCSSButton","SettingsPane","TypeScaleContainer","settingsPane_Elements","settingsPane_Background","settingsPane_SettingsPaneFooter","Main","fontsPane_FontsPane","showcasePane_ShowcasePane","settingsPane_SettingsPane","UndoButton","onClickHandler","NotificationSnackbar","_PureComponent","timerId","handleUndoButtonClick","handleCloseIconClick","handlers","elevate","setTimer","drop","undo","undoActionHandler","clearTimer","_this3","setTimeout","clearTimeout","pending","notification","groupState","prevGroupState","notifications_UndoButton","ownProps","bindActionCreators","objectWithoutProperties","notifications_NotificationSnackbar","App","header_Header","components_Main","notifications_Notifications","reducers_notifications","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","__webpack_require__","d","__webpack_exports__","src_store","src_renderApp","store","createStore","applyMiddleware","thunk","renderApp","jsx","es","components_App","ReactDOM","render","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f110f601.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport GitHub from \"@material-ui/icons/GitHub\";\nimport \"./styles/GitHubLink.css\";\n\nexport const GitHubLink = () => (\n  <a\n    aria-label=\"Project GitHub page\"\n    className=\"GitHubLink\"\n    href=\"https://github.com/voliev/font-blender\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <GitHub fontSize=\"large\" />\n  </a>\n);\n\nexport default React.memo(GitHubLink);\n","import React from \"react\";\nimport GitHubLink from \"./GitHubLink\";\nimport \"./styles/Header.css\";\n\nexport const Header = () => (\n  <header className=\"Header\">\n    <p className=\"app-name\">FontBlender</p>\n    <GitHubLink />\n  </header>\n);\n\nexport default React.memo(Header);\n","// *** ACTION TYPES ***\n\n// Background\nexport const SET_BACKGROUND_COLOR = \"SET_BACKGROUND_COLOR\";\n\n// Filteres\nexport const SET_CATEGORIES_FILTER = \"SET_CATEGORIES_FILTER\";\nexport const SET_SORTING_ORDER = \"SET_SORTING_ORDER\";\nexport const SET_SORTING_PARAM = \"SET_SORTING_PARAM\";\nexport const SET_TITLE_FILTER = \"SET_TITLE_FILTER\";\n\n// Fonts\nexport const FETCH_FONTS_DATA = \"FETCH_FONTS_DATA\";\nexport const FETCH_FONTS_DATA_SUCCESS = \"FETCH_FONTS_DATA_SUCCESS\";\nexport const FETCH_FONTS_DATA_FAILURE = \"FETCH_FONTS_DATA_FAILURE\";\nexport const SET_FONTS = \"SET_FONTS\";\nexport const UPDATE_FONT = \"UPDATE_FONT\";\n\n// Notifications\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION = \"REMOVE_NOTIFICATION\";\n\n// Showcase\nexport const DISPLAY_SHOWCASE_TEXT = \"DISPLAY_SHOWCASE_TEXT\";\nexport const DISPLAY_STYLES = \"DISPLAY_STYLES\";\nexport const DISPLAY_SHOWCASE_FONT_PREVIEW = \"DISPLAY_SHOWCASE_FONT_PREVIEW\";\n\n// Styles\nexport const SET_DEFAULT_STATE = \"SET_DEFAULT_STATE\";\nexport const UNDO_RESET = \"UNDO_RESET\";\n\n// Text styles\nexport const SET_STYLES_INHERITANCE = \"SET_STYLES_INHERITANCE\";\nexport const UPDATE_ELEMENT_STYLES = \"UPDATE_ELEMENT_STYLES\";\n\n// Selected fonts\nexport const ADD_SELECTED_FONT = \"ADD_SELECTED_FONT\";\nexport const CLEAR_SELECTED_FONTS = \"CLEAR_SELECTED_FONTS\";\nexport const REMOVE_FONT_FROM_SELECTED = \"REMOVE_FONT_FROM_SELECTED\";\nexport const UNDO_DESELECTED = \"UNDO_DESELECTED\";\n\n// Type scale\nexport const SET_DEFAULT_TYPE_SCALE_STATE = \"SET_DEFAULT_TYPE_SCALE_STATE\";\nexport const SET_FONT_SIZE = \"SET_FONT_SIZE\";\nexport const SET_TYPE_SCALE = \"SET_TYPE_SCALE\";\n\n// *** MISCELLANEOUS ***\n\n// Google Fonts API endpoint URL\nexport const GOOGLE_FONTS_API_ENDPOINT =\n  \"https://www.googleapis.com/webfonts/v1/webfonts\";\n// Fonts' bundle size that should be prefetched\nexport const BUNDLE_SIZE = 50;\n// Available text elements for styling\nexport const ELEMENTS = [\"body\", \"h1\", \"h2\", \"h3\", \"h4\", \"li\", \"small\"];\n// Font's character range that needs to be prefetched\nexport const CHAR_RANGE =\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n// Font showcase string\nexport const SHOWCASE_STRING =\n  \"That's the beauty of music. They can't get that from you...\";\n// Default showcase font size\nexport const DEFAULT_FONT_SIZE = 16;\n// Available type scale values\nexport const SCALE_VALUES = {\n  1.067: \"Minor Second\",\n  1.125: \"Major Second\",\n  1.2: \"Minor Third\",\n  1.25: \"Major Third\",\n  1.333: \"Perfect Fourth\",\n  1.414: \"Augmented Fourth\",\n  1.5: \"Perfect Fifth\",\n  1.618: \"Golden Ratio\"\n};\n// Minimum gap between the color picker icon and viewport\n// edge required to place the color picker\nexport const MIN_GAP = 300;\n// Notification snackbar visibility timeout\nexport const TIMEOUT = 10000;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport debounce from \"lodash.debounce\";\nimport ClearOutlined from \"@material-ui/icons/ClearOutlined\";\nimport Search from \"@material-ui/icons/Search\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setTitleFilter } from \"../../actions/filters\";\nimport \"./styles/TitleFilter.css\";\n\nexport class TitleFilter extends Component {\n  constructor() {\n    super();\n\n    this.handleTitleFilterChange = this.handleTitleFilterChange.bind(this);\n    this.handleClearTitleFilter = this.handleClearTitleFilter.bind(this);\n  }\n\n  handleTitleFilterChange(e) {\n    e.persist();\n\n    if (e.target) {\n      const { value } = e.target;\n\n      this.props.setTitleFilter(value);\n    }\n  }\n\n  handleClearTitleFilter() {\n    this.props.setTitleFilter();\n  }\n\n  render() {\n    const iconClasses = classNames({\n      icon: true,\n      clickable: !!this.props.title\n    });\n\n    return (\n      <div className=\"TitleFilter\">\n        <input\n          aria-label=\"Filter by font family title\"\n          className=\"text-input\"\n          name=\"title\"\n          onChange={debounce(this.handleTitleFilterChange, 300, {\n            leading: true\n          })}\n          placeholder=\"Search\"\n          type=\"text\"\n          value={this.props.title}\n        />\n        <button\n          className={iconClasses}\n          onClick={this.handleClearTitleFilter}\n          disabled={this.props.title === \"\"}\n          title=\"Clear\"\n        >\n          {this.props.title.length > 0 ? <ClearOutlined /> : <Search />}\n        </button>\n      </div>\n    );\n  }\n}\n\nTitleFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n  setTitleFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  title: state.filters.title\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setTitleFilter: (title = \"\") => dispatch(setTitleFilter(title))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TitleFilter);\n","import {\n  SET_CATEGORIES_FILTER,\n  SET_SORTING_ORDER,\n  SET_SORTING_PARAM,\n  SET_TITLE_FILTER\n} from \"../constants\";\n\nexport const setTitleFilter = (title = \"\") => ({\n  type: SET_TITLE_FILTER,\n  title\n});\n\nexport const setCategoriesFilter = category => ({\n  type: SET_CATEGORIES_FILTER,\n  category\n});\n\nexport const setSortingParam = param => ({\n  type: SET_SORTING_PARAM,\n  param\n});\n\nexport const setSortingOrder = order => ({\n  type: SET_SORTING_ORDER,\n  order\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/SortingParameters.css\";\n\nconst SortingParameters = ({ sortingParamChangeHandler, value }) => (\n  <select\n    className=\"SortingParameters\"\n    id=\"sorting-param\"\n    name=\"param\"\n    onChange={sortingParamChangeHandler}\n    title=\"Select sorting parameter\"\n    value={value}\n  >\n    {[\"popularity\", \"alphabetical\"].map(param => (\n      <option value={param === \"alphabetical\" ? \"alpha\" : param} key={param}>\n        {param}\n      </option>\n    ))}\n  </select>\n);\n\nSortingParameters.propTypes = {\n  sortingParamChangeHandler: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport default SortingParameters;\n","import React from \"react\";\nimport ArrowDownwardRounded from \"@material-ui/icons/ArrowDownwardRounded\";\nimport ArrowUpwardRounded from \"@material-ui/icons/ArrowUpwardRounded\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/SortingOrder.css\";\n\nconst SortingOrder = ({ sortingOrderChangeHandler, value }) => (\n  <div className=\"SortingOrder\">\n    <button\n      className=\"btn btn-round-big\"\n      onClick={sortingOrderChangeHandler}\n      value={value}\n      title=\"Change sorting order\"\n    >\n      {value === \"asc\" ? <ArrowDownwardRounded /> : <ArrowUpwardRounded />}\n    </button>\n  </div>\n);\n\nSortingOrder.propTypes = {\n  sortingOrderChangeHandler: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport default SortingOrder;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SortingParameters from \"./SortingParameters\";\nimport SortingOrder from \"./SortingOrder\";\nimport { setSortingParam, setSortingOrder } from \"../../actions/filters\";\nimport \"./styles/SortingFilter.css\";\n\nexport class SortingFilter extends Component {\n  constructor() {\n    super();\n\n    this.handleSortingParamChange = this.handleSortingParamChange.bind(this);\n    this.handleSortingOrderChange = this.handleSortingOrderChange.bind(this);\n  }\n\n  handleSortingParamChange(e) {\n    const { value } = e.target;\n    this.props.setSortingParam(value);\n  }\n\n  handleSortingOrderChange(e) {\n    const { value } = e.currentTarget;\n    this.props.setSortingOrder(value);\n  }\n\n  render() {\n    const { sorting } = this.props;\n\n    return (\n      <div className=\"SortingFilter\">\n        <SortingParameters\n          sortingParamChangeHandler={this.handleSortingParamChange}\n          value={sorting.param}\n        />\n        <SortingOrder\n          sortingOrderChangeHandler={this.handleSortingOrderChange}\n          value={sorting.order}\n        />\n      </div>\n    );\n  }\n}\n\nSortingFilter.propTypes = {\n  sorting: PropTypes.exact({\n    param: PropTypes.string.isRequired,\n    order: PropTypes.string.isRequired\n  }).isRequired,\n  setSortingParam: PropTypes.func.isRequired,\n  setSortingOrder: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sorting: state.filters.sorting\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSortingParam: param => dispatch(setSortingParam(param)),\n  setSortingOrder: order => dispatch(setSortingOrder(order))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SortingFilter);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxOutlined from \"@material-ui/icons/CheckBoxOutlined\";\nimport PropTypes from \"prop-types\";\nimport { setCategoriesFilter } from \"../../actions/filters\";\nimport { connect } from \"react-redux\";\nimport \"./styles/CategoriesList.css\";\n\nexport class CategoriesList extends Component {\n  constructor() {\n    super();\n\n    this.first = React.createRef();\n\n    this.handleCategoriesFilterChange = this.handleCategoriesFilterChange.bind(\n      this\n    );\n  }\n\n  handleCategoriesFilterChange(e) {\n    const { value } = e.target;\n    this.props.setCategoriesFilter(value);\n  }\n\n  componentDidMount() {\n    this.first.current.focus();\n  }\n\n  render() {\n    const { animationEndHandler, categories, stage } = this.props;\n\n    const listClasses = classNames({\n      CategoriesList: true,\n      \"fade-in\": stage === \"fade-in\",\n      \"fade-out\": stage === \"fade-out\"\n    });\n\n    return (\n      <ul className={listClasses} onAnimationEnd={animationEndHandler}>\n        {Object.keys(categories).map((category, idx) => (\n          <li\n            className=\"list-item\"\n            key={category}\n            ref={idx === 0 ? this.first : null}\n          >\n            <label className=\"label\" htmlFor={category}>\n              {categories[category] ? (\n                <CheckBoxOutlined />\n              ) : (\n                <CheckBoxOutlineBlank />\n              )}\n              <input\n                checked={categories[category]}\n                className=\"input\"\n                id={category}\n                name=\"categories\"\n                onChange={this.handleCategoriesFilterChange}\n                type=\"checkbox\"\n                value={category}\n              />\n              {category.replace(/\\b\\w|\\W/g, match =>\n                match === \"-\" ? \" \" : match.toUpperCase()\n              )}\n            </label>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nCategoriesList.propTypes = {\n  animationEndHandler: PropTypes.func.isRequired,\n  categories: PropTypes.objectOf(PropTypes.bool).isRequired,\n  setCategoriesFilter: PropTypes.func.isRequired,\n  stage: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  categories: state.filters.categories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCategoriesFilter: category => dispatch(setCategoriesFilter(category))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoriesList);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport CategoriesList from \"./CategoriesList\";\nimport \"./styles/CategoriesFilter.css\";\n\nclass CategoriesFilter extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      stage: 0\n    };\n\n    this.handleAnimationEnd = this.handleAnimationEnd.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  getLifecycleStage() {\n    const stages = {\n      0: \"inactive\",\n      1: \"fade-in\",\n      2: \"active\",\n      3: \"fade-out\"\n    };\n\n    return stages[this.state.stage];\n  }\n\n  handleButtonClick() {\n    this.setState(({ stage }) => ({\n      stage: ++stage\n    }));\n  }\n\n  handleOutsideClick() {\n    const stage = this.getLifecycleStage();\n\n    if (stage !== \"inactive\") {\n      this.setState({\n        stage: 3\n      });\n    }\n  }\n\n  handleAnimationEnd(e) {\n    const { animationName } = e;\n    const stage = this.getLifecycleStage();\n\n    if (animationName === \"fadeIn\" && stage === \"fade-in\") {\n      this.setState(({ stage }) => ({\n        stage: ++stage\n      }));\n    }\n\n    if (animationName === \"fadeOut\" && stage === \"fade-out\") {\n      this.setState({\n        stage: 0\n      });\n    }\n  }\n\n  render() {\n    const stage = this.getLifecycleStage();\n    const buttonClasses = classNames({\n      btn: true,\n      \"btn-round-big\": true,\n      active: stage === \"fade-in\" || stage === \"active\"\n    });\n\n    return (\n      <OutsideClickHandler\n        onOutsideClick={this.handleOutsideClick}\n        disabled={stage === \"inactive\"}\n      >\n        <div className=\"CategoriesFilter\">\n          <button\n            className={buttonClasses}\n            onClick={this.handleButtonClick}\n            title=\"Select categories\"\n          >\n            <FilterList />\n          </button>\n          {stage !== \"inactive\" ? (\n            <CategoriesList\n              animationEndHandler={this.handleAnimationEnd}\n              stage={stage}\n            />\n          ) : null}\n        </div>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nexport default CategoriesFilter;\n","import React from \"react\";\nimport \"./styles/Spinner.css\";\n\nconst Spinner = () => (\n  <div className=\"Spinner\">\n    <span />\n    <span />\n    <span />\n  </div>\n);\n\nexport default Spinner;\n","import { combineReducers } from \"redux\";\nimport {\n  FETCH_FONTS_DATA,\n  FETCH_FONTS_DATA_FAILURE,\n  FETCH_FONTS_DATA_SUCCESS,\n  SET_FONTS,\n  UPDATE_FONT\n} from \"../constants\";\n\nexport const fontsDataStatus = (state = \"\", action) => {\n  switch (action.type) {\n    case FETCH_FONTS_DATA:\n      return \"fetching\";\n    case FETCH_FONTS_DATA_SUCCESS:\n      return \"success\";\n    case FETCH_FONTS_DATA_FAILURE:\n      return \"failure\";\n    default:\n      return state;\n  }\n};\n\nconst initialState = {};\n\nexport const all = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FONTS:\n      return action.fonts;\n    case UPDATE_FONT:\n      return {\n        ...state,\n        [action.family]: {\n          ...state[action.family],\n          ...action.updates\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  all,\n  fontsDataStatus\n});\n\nexport const getFonts = state => state.fonts.all;\nexport const getFont = (state, family) => state.fonts.all[family];\nexport const getFontsDataStatus = state => state.fonts.fontsDataStatus;\n","import WebFont from \"webfontloader\";\nimport { getFonts } from \"../reducers/fonts\";\nimport {\n  GOOGLE_FONTS_API_ENDPOINT,\n  FETCH_FONTS_DATA,\n  FETCH_FONTS_DATA_FAILURE,\n  FETCH_FONTS_DATA_SUCCESS,\n  SET_FONTS,\n  UPDATE_FONT\n} from \"../constants\";\n\nexport const fetchFontsData = () => ({\n  type: FETCH_FONTS_DATA\n});\n\nexport const fetchFontsDataSuccess = () => ({\n  type: FETCH_FONTS_DATA_SUCCESS\n});\n\nexport const fetchFontsDataFailure = () => ({\n  type: FETCH_FONTS_DATA_FAILURE\n});\n\nexport const setFonts = fonts => ({\n  type: SET_FONTS,\n  fonts\n});\n\nexport const startFetchFontsData = () => {\n  return async dispatch => {\n    const apiRequestURL = `${GOOGLE_FONTS_API_ENDPOINT}?key=${\n      process.env.REACT_APP_GOOGLE_FONTS_API_KEY\n    }&sort=popularity`;\n\n    dispatch(fetchFontsData());\n\n    try {\n      const res = await fetch(apiRequestURL);\n      const { items } = await res.json();\n      dispatch(fetchFontsDataSuccess());\n\n      const fonts = items.reduce((result, font) => {\n        result[font.family] = {\n          family: font.family,\n          category: font.category,\n          variants: font.variants,\n          subsets: font.subsets,\n          fetching: false,\n          active: false,\n          requested: false,\n          prefetched: false,\n          fetched: false\n        };\n\n        return result;\n      }, {});\n\n      return dispatch(setFonts(fonts));\n    } catch (e) {\n      dispatch(fetchFontsDataFailure());\n      // TODO: Eject and replace service worker with custom one.\n      //       Implement fonts' json data caching.\n      return dispatch(setFonts({}));\n    }\n  };\n};\n\nexport const updateFont = (family, updates) => ({\n  type: UPDATE_FONT,\n  family,\n  updates\n});\n\nexport const startFetchFont = (family, charRange = undefined) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const fonts = getFonts(state);\n    const font = fonts[family];\n    const fetchFull = !charRange;\n    const requestString = generateRequestString(font, fetchFull);\n    const options = generateRequestOptions(\n      requestString,\n      charRange,\n      dispatch,\n      state\n    );\n\n    WebFont.load(options);\n\n    const updatedState = getState();\n    const updatedFonts = getFonts(updatedState);\n\n    // For \"then\" chaining in selectedFonts.js async action creator\n    return Promise.resolve(updatedFonts[family]);\n  };\n};\n\nexport const generateRequestString = (font, fetchFull = false) => {\n  const { family, subsets, variants } = font;\n\n  if (fetchFull) {\n    return `${family}:${variants.join(\",\")}`;\n  }\n\n  const weight = variants.includes(\"regular\")\n    ? \"400\"\n    : parseInt(variants[0], 10).toString();\n  const subset = subsets.includes(\"latin\") ? \"latin\" : subsets[0];\n\n  return `${family}:${weight}:${subset}`;\n};\n\nexport const generateRequestOptions = (request, chars, dispatch) => ({\n  google: {\n    families: [request],\n    text: chars\n  },\n  classes: false,\n  timeout: 10000,\n  fontloading: getEventListener(\"fontloading\", dispatch, chars),\n  fontactive: getEventListener(\"fontactive\", dispatch, chars),\n  fontinactive: getEventListener(\"fontinactive\", dispatch, chars)\n});\n\nexport const getEventListener = (event, dispatch, charRange) => {\n  const listeners = {\n    fontloading: family => {\n      const updates = Object.assign(\n        { fetching: true },\n        charRange ? { requested: true } : {}\n      );\n      dispatch(updateFont(family, updates));\n    },\n    fontactive: family => {\n      const updates = Object.assign(\n        { active: true, fetching: false },\n        charRange ? { prefetched: true } : { fetched: true }\n      );\n      dispatch(updateFont(family, updates));\n    },\n    fontinactive: family => {\n      const updates = Object.assign(\n        { fetching: false },\n        charRange ? { active: false } : {}\n      );\n      dispatch(updateFont(family, updates));\n    }\n  };\n\n  return listeners[event];\n};\n","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../constants\";\n\nexport const addNotification = (text, group) => ({\n  type: ADD_NOTIFICATION,\n  text,\n  group\n});\n\nexport const removeNotification = group => ({\n  type: REMOVE_NOTIFICATION,\n  group\n});\n","import {\n  ADD_SELECTED_FONT,\n  CLEAR_SELECTED_FONTS,\n  REMOVE_FONT_FROM_SELECTED,\n  UNDO_DESELECTED\n} from \"../constants\";\nimport { startFetchFont } from \"./fonts\";\nimport { addNotification, removeNotification } from \"./notifications\";\nimport { getFonts } from \"../reducers/fonts\";\n\nexport const addFontToSelected = family => ({\n  type: ADD_SELECTED_FONT,\n  family\n});\n\nexport const removeFontFromSelected = family => ({\n  type: REMOVE_FONT_FROM_SELECTED,\n  family\n});\n\nexport const clearSelectedFonts = () => ({\n  type: CLEAR_SELECTED_FONTS\n});\n\nexport const startAddFontToSelected = family => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const fonts = getFonts(state);\n    const font = fonts[family];\n\n    if (font.fetched) {\n      // Add font to selected if it has been already fetchedselected list\n      dispatch(addFontToSelected(family));\n    } else {\n      // Fetch font first than add it to selected\n      return dispatch(startFetchFont(family))\n        .then(() => dispatch(addFontToSelected(family)))\n        .catch(() => {});\n    }\n  };\n};\n\nexport const undoDeselected = () => ({\n  type: UNDO_DESELECTED\n});\n\nexport const startRemoveFontFromSelected = family => {\n  return dispatch => {\n    dispatch(removeFontFromSelected(family));\n\n    const text = `${family} font family has been removed`;\n    const group = \"selectedFonts\";\n    // Add notification to display it with \"undo\" option\n    dispatch(addNotification(text, group));\n  };\n};\n\nexport const startClearSelectedFonts = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const selectedFonts = [...state.selectedFonts.present];\n\n    dispatch(clearSelectedFonts());\n\n    const text =\n      selectedFonts.length > 1\n        ? `${selectedFonts.length} font families have been removed`\n        : `${selectedFonts.length} font family have been removed`;\n    const group = \"selectedFonts\";\n    // Add notification to display it with \"undo\" option\n    dispatch(addNotification(text, group));\n  };\n};\n\nexport const startUndoDeselected = () => {\n  return dispatch => {\n    // Undo deselection\n    dispatch(undoDeselected());\n\n    const group = \"selectedFonts\";\n\n    // Remove notification to hide \"undo\" option\n    dispatch(removeNotification(group));\n  };\n};\n","import {\n  DISPLAY_SHOWCASE_FONT_PREVIEW,\n  DISPLAY_SHOWCASE_TEXT,\n  DISPLAY_STYLES\n} from \"../constants\";\nimport { startFetchFont } from \"../actions/fonts\";\nimport { getFonts } from \"../reducers/fonts\";\n\nexport const displayShowcaseText = () => ({\n  type: DISPLAY_SHOWCASE_TEXT\n});\n\nexport const displayStyles = () => ({\n  type: DISPLAY_STYLES\n});\n\nexport const displayShowcaseFontPreview = family => ({\n  type: DISPLAY_SHOWCASE_FONT_PREVIEW,\n  family\n});\n\nexport const startDisplayShowcaseFontPreview = family => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const fonts = getFonts(state);\n    const font = fonts[family];\n\n    if (font.fetched) {\n      // Display showcase font if it has been fetched already\n      dispatch(displayShowcaseFontPreview(family));\n    } else {\n      // Fetch showcase font and display it\n      return dispatch(startFetchFont(family))\n        .then(() => dispatch(displayShowcaseFontPreview(family)))\n        .catch(() => {});\n    }\n  };\n};\n","import undoable, { includeAction } from \"redux-undo\";\nimport {\n  ADD_SELECTED_FONT,\n  CLEAR_SELECTED_FONTS,\n  REMOVE_FONT_FROM_SELECTED,\n  UNDO_DESELECTED\n} from \"../constants\";\nimport { getFonts } from \"./fonts\";\n\nconst initialState = [];\n\nexport const selectedFonts = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_SELECTED_FONT:\n      return [...state, action.family];\n    case REMOVE_FONT_FROM_SELECTED:\n      return state.filter(family => family !== action.family);\n    case CLEAR_SELECTED_FONTS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default undoable(selectedFonts, {\n  limit: 1,\n  filter: includeAction([REMOVE_FONT_FROM_SELECTED, CLEAR_SELECTED_FONTS]),\n  undoType: UNDO_DESELECTED\n});\n\nexport const getSelectedFontFamilies = state => state.selectedFonts.present;\nexport const getSelectedFonts = state => {\n  const fonts = getFonts(state);\n\n  return getSelectedFontFamilies(state).reduce((selected, family) => {\n    selected[family] = fonts[family];\n    return selected;\n  }, {});\n};\nexport const isSelected = (state, family) =>\n  state.selectedFonts.present.includes(family);\n","import React, { Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport Preview from \"@material-ui/icons/RemoveRedEyeRounded\";\nimport PropTypes from \"prop-types\";\n\nconst FontInfo = ({\n  family,\n  category,\n  subsets,\n  variants,\n  fetching,\n  fontPreviewClickHandler\n}) => {\n  const fontFamilyStyle = {\n    fontFamily: `'${family}', '${category}'`\n  };\n\n  const fontFamilyClasses = classNames({\n    \"family-name\": true,\n    fetching\n  });\n\n  return (\n    <Fragment>\n      <div className=\"family\">\n        <h4\n          className={fontFamilyClasses}\n          onClick={fontPreviewClickHandler}\n          style={\n            fetching\n              ? {\n                  fontFamily: `${category}`\n                }\n              : fontFamilyStyle\n          }\n          data-family={family}\n          title=\"Preview font\"\n        >\n          {family}\n        </h4>\n        <span className=\"preview-icon\">\n          <Preview fontSize=\"default\" />\n        </span>\n      </div>\n      <div className=\"category\">{category}</div>\n      <div className=\"charsets font_small\">\n        <span className=\"number\">{subsets.length}</span> character{\" \"}\n        {subsets.length === 1 ? \"set\" : \"sets\"}\n      </div>\n      <div className=\"styles font_small\">\n        <span className=\"number\">{variants.length}</span>{\" \"}\n        {variants.length === 1 ? \"style\" : \"styles\"}\n      </div>\n    </Fragment>\n  );\n};\n\nFontInfo.propTypes = {\n  family: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  fetching: PropTypes.bool.isRequired,\n  fontPreviewClickHandler: PropTypes.func.isRequired\n};\n\nexport default FontInfo;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport AddCircleRounded from \"@material-ui/icons/AddCircleRounded\";\nimport SyncRounded from \"@material-ui/icons/SyncRounded\";\nimport CheckCircleRounded from \"@material-ui/icons/CheckCircleRounded\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/FontItemControl.css\";\n\nclass FontItemControl extends Component {\n  getFontStateFromProps() {\n    const { active, requested, selected, fetching } = this.props;\n    const stateOptions = {\n      selected,\n      active: active && !selected,\n      fetch: !active && requested && !fetching\n    };\n\n    for (const state in stateOptions) {\n      if (stateOptions[state]) {\n        return state;\n      }\n    }\n  }\n\n  getControlIconFromFontState(fontState) {\n    const icons = {\n      fetch: <SyncRounded fontSize=\"default\" />,\n      active: <AddCircleRounded fontSize=\"default\" />,\n      selected: <CheckCircleRounded fontSize=\"default\" />\n    };\n\n    return icons[fontState];\n  }\n\n  getTitleAttributeFromFontState(fontState) {\n    const titleAttributes = {\n      fetch: \"Font has not been loaded. Try again\",\n      active: \"Add to Selected\",\n      selected: \"Deselect font\"\n    };\n\n    const title = titleAttributes[fontState] || \"Fetching...\";\n\n    return title;\n  }\n\n  render() {\n    const {\n      family,\n      requested,\n      prefetched,\n      fetched,\n      fetching,\n      selected,\n      fontSelectionDeselectionHandler,\n      requestFont\n    } = this.props;\n\n    const componentClasses = classNames({\n      FontItemControl: true,\n      fetching\n    });\n    const btnClasses = classNames({\n      btn: true,\n      \"btn-round-small\": true,\n      \"add-circle\": !selected && (prefetched || fetched),\n      checked: selected && !fetching,\n      sync: requested && !prefetched && !fetched\n    });\n\n    const fontState = this.getFontStateFromProps();\n\n    return (\n      <div className={componentClasses}>\n        <button\n          className={btnClasses}\n          onClick={prefetched ? fontSelectionDeselectionHandler : requestFont}\n          data-family={family}\n          value={family}\n          title={this.getTitleAttributeFromFontState(fontState)}\n        >\n          {this.getControlIconFromFontState(fontState)}\n        </button>\n      </div>\n    );\n  }\n}\n\nFontItemControl.propTypes = {\n  family: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  requested: PropTypes.bool.isRequired,\n  prefetched: PropTypes.bool.isRequired,\n  fetched: PropTypes.bool.isRequired,\n  fetching: PropTypes.bool.isRequired,\n  selected: PropTypes.bool.isRequired,\n  fontSelectionDeselectionHandler: PropTypes.func.isRequired,\n  requestFont: PropTypes.func.isRequired\n};\n\nexport default FontItemControl;\n","import React, { PureComponent } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { CHAR_RANGE } from \"../../constants\";\nimport FontInfo from \"./FontInfo\";\nimport FontItemControl from \"./FontItemControl\";\nimport \"./styles/FontItem.css\";\n\nclass FontItem extends PureComponent {\n  constructor() {\n    super();\n\n    this.fontItem = React.createRef();\n\n    this.state = {\n      fontItem: undefined\n    };\n\n    this.requestFont = this.requestFont.bind(this);\n    this.handleFontSelectionDeselection = this.handleFontSelectionDeselection.bind(\n      this\n    );\n    this.handleFontPreviewClick = this.handleFontPreviewClick.bind(this);\n  }\n\n  requestFont() {\n    this.props.fetchFont(this.props.font.family, CHAR_RANGE);\n  }\n\n  handleFontSelectionDeselection(e) {\n    const { value } = e.currentTarget;\n    !this.props.selected\n      ? this.props.addFontToSelected(value)\n      : this.props.removeFontFromSelected(value);\n  }\n\n  handleFontPreviewClick(e) {\n    const { family } = e.currentTarget.dataset;\n    this.props.startDisplayShowcaseFontPreview(family);\n  }\n\n  componentDidUpdate() {\n    if (this.props.isVisible && !this.props.font.requested) {\n      this.requestFont();\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ fontItem: this.fontItem.current });\n  }\n\n  render() {\n    const { font, selected, previewFontFamily } = this.props;\n\n    const componentClasses = classNames({\n      FontItem: true,\n      selected,\n      fetching: font.fetching,\n      blank: !font.requested,\n      preview: font.family === previewFontFamily\n    });\n\n    return (\n      <li className={componentClasses} ref={this.fontItem}>\n        <FontInfo\n          {...font}\n          fontPreviewClickHandler={this.handleFontPreviewClick}\n        />\n        <FontItemControl\n          {...font}\n          selected={selected}\n          fontSelectionDeselectionHandler={this.handleFontSelectionDeselection}\n          requestFont={this.requestFont}\n        />\n      </li>\n    );\n  }\n}\n\nFontItem.propTypes = {\n  font: PropTypes.exact({\n    family: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    fetching: PropTypes.bool.isRequired,\n    active: PropTypes.bool.isRequired,\n    requested: PropTypes.bool.isRequired,\n    prefetched: PropTypes.bool.isRequired,\n    fetched: PropTypes.bool.isRequired\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  isVisible: PropTypes.bool,\n  previewFontFamily: PropTypes.string,\n  fetchFont: PropTypes.func.isRequired,\n  addFontToSelected: PropTypes.func.isRequired,\n  removeFontFromSelected: PropTypes.func.isRequired,\n  startDisplayShowcaseFontPreview: PropTypes.func.isRequired\n};\n\nexport default FontItem;\n","import { connect } from \"react-redux\";\nimport { startFetchFont } from \"../../actions/fonts\";\nimport {\n  startAddFontToSelected,\n  startRemoveFontFromSelected\n} from \"../../actions/selectedFonts\";\nimport { startDisplayShowcaseFontPreview } from \"../../actions/showcase\";\nimport { isSelected } from \"../../reducers/selectedFonts\";\nimport FontItem from \"./FontItem\";\n\nconst mapStateToProps = (state, { font, isVisible }) => ({\n  font,\n  isVisible,\n  selected: isSelected(state, font.family),\n  previewFontFamily: state.showcase.fontPreview.family\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFont: (family, charRange = undefined) =>\n    dispatch(startFetchFont(family, charRange)),\n  addFontToSelected: family => dispatch(startAddFontToSelected(family)),\n  removeFontFromSelected: family =>\n    dispatch(startRemoveFontFromSelected(family)),\n  startDisplayShowcaseFontPreview: family =>\n    dispatch(startDisplayShowcaseFontPreview(family))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FontItem);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport PropTypes from \"prop-types\";\nimport FontItemContainer from \"./FontItemContainer\";\nimport \"./styles/VisibleFonts.css\";\n\nclass VisibleFonts extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      containment: \"\"\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      containment: this.listRef.current\n    });\n  }\n\n  render() {\n    const { containment } = this.state;\n    const { visibleFonts, adjustBundleSize } = this.props;\n\n    const componentClasses = classNames({\n      VisibleFonts: true,\n      empty: visibleFonts.length === 0\n    });\n\n    return (\n      <ul className={componentClasses} ref={this.listRef}>\n        {visibleFonts.length > 0 && containment !== \"\" ? (\n          visibleFonts.map((font, idx, src) =>\n            !font.requested || idx === src.length - 1 ? (\n              <VisibilitySensor\n                containment={containment}\n                key={font.family}\n                onChange={idx === src.length - 1 ? adjustBundleSize : null}\n                partialVisibility={true}\n                intervalDelay={200}\n                scrollCheck={true}\n                scrollDelay={1000}\n              >\n                {({ isVisible }) => (\n                  <FontItemContainer font={font} isVisible={isVisible} />\n                )}\n              </VisibilitySensor>\n            ) : (\n              <FontItemContainer font={font} key={font.family} />\n            )\n          )\n        ) : (\n          <li className=\"no-matches\">No matches found...</li>\n        )}\n      </ul>\n    );\n  }\n}\n\nVisibleFonts.propTypes = {\n  adjustBundleSize: PropTypes.func.isRequired,\n  visibleFonts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired\n};\n\nexport default VisibleFonts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/ErrorMessage.css\";\n\nconst ErrorMessage = ({ children }) => (\n  <div className=\"ErrorMessage\">{children}</div>\n);\n\nErrorMessage.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ErrorMessage;\n","import {\n  SET_CATEGORIES_FILTER,\n  SET_TITLE_FILTER,\n  SET_SORTING_ORDER,\n  SET_SORTING_PARAM\n} from \"../constants\";\n\nconst initialState = {\n  title: \"\",\n  categories: {\n    serif: true,\n    \"sans-serif\": true,\n    display: true,\n    monospace: true,\n    handwriting: true\n  },\n  sorting: {\n    param: \"popularity\",\n    order: \"asc\"\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TITLE_FILTER:\n      return {\n        ...state,\n        title: action.title\n      };\n    case SET_CATEGORIES_FILTER:\n      return {\n        ...state,\n        categories: {\n          ...state.categories,\n          [action.category]: !state.categories[action.category]\n        }\n      };\n    case SET_SORTING_PARAM:\n      return {\n        ...state,\n        sorting: {\n          ...state.sorting,\n          param: action.param\n        }\n      };\n    case SET_SORTING_ORDER:\n      return {\n        ...state,\n        sorting: {\n          ...state.sorting,\n          order: action.order === \"asc\" ? \"des\" : \"asc\"\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getFilters = state => state.filters;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { BUNDLE_SIZE } from \"../../constants\";\nimport createFilteredFontsSelector from \"../../selectors/fonts\";\nimport Spinner from \"../Spinner\";\nimport VisibleFonts from \"./VisibleFonts\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport ErrorOutline from \"@material-ui/icons/ErrorOutlineRounded\";\nimport { startFetchFontsData } from \"../../actions/fonts\";\nimport { getFonts, getFontsDataStatus } from \"../../reducers/fonts\";\nimport { getFilters } from \"../../reducers/filters\";\nimport \"./styles/FontsList.css\";\n\nexport class FontsList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      bundleLimit: BUNDLE_SIZE\n    };\n    this.adjustBundleSize = this.adjustBundleSize.bind(this);\n    this.handleFontsDataRequest = this.handleFontsDataRequest.bind(this);\n  }\n\n  adjustBundleSize(isVisible) {\n    if (!isVisible) {\n      return;\n    }\n\n    const { listMaxLength } = this.props;\n\n    this.setState(({ bundleLimit }) => {\n      const nextBundleLimit =\n        bundleLimit + BUNDLE_SIZE > listMaxLength\n          ? listMaxLength\n          : bundleLimit + BUNDLE_SIZE;\n\n      return {\n        bundleLimit: nextBundleLimit\n      };\n    });\n  }\n\n  handleFontsDataRequest() {\n    this.props.fetchFontsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.filteredFonts.length !== this.props.filteredFonts.length) {\n      this.setState({\n        bundleLimit: BUNDLE_SIZE\n      });\n    }\n  }\n\n  render() {\n    const { fonts, filteredFonts, fontsDataStatus } = this.props;\n    const { bundleLimit } = this.state;\n\n    const visibleFonts = filteredFonts\n      .slice(0, bundleLimit)\n      .map(family => fonts[family]);\n\n    const componentClasses = classNames({\n      FontsList: true,\n      fetching: fontsDataStatus === \"\" || fontsDataStatus === \"fetching\",\n      error: fontsDataStatus === \"failure\"\n    });\n\n    return (\n      <div className={componentClasses}>\n        {(fontsDataStatus === \"\" || fontsDataStatus === \"fetching\") && (\n          <Spinner />\n        )}\n        {fontsDataStatus === \"success\" && (\n          <VisibleFonts\n            adjustBundleSize={this.adjustBundleSize}\n            visibleFonts={visibleFonts}\n          />\n        )}\n        {fontsDataStatus === \"failure\" && (\n          <ErrorMessage>\n            <div className=\"msg\">\n              <ErrorOutline fontSize=\"large\" />\n              <p className=\"text\">Fonts are not available.</p>\n              <p className=\"text\">The list has not been loaded.</p>\n            </div>\n            <button\n              className=\"btn btn-blue-rect\"\n              onClick={this.handleFontsDataRequest}\n              title=\"Get Fonts\"\n            >\n              Try again\n            </button>\n          </ErrorMessage>\n        )}\n      </div>\n    );\n  }\n}\n\nFontsList.propTypes = {\n  fetchFontsData: PropTypes.func.isRequired,\n  filteredFonts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fonts: PropTypes.objectOf(\n    PropTypes.exact({\n      family: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n      variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      fetching: PropTypes.bool.isRequired,\n      active: PropTypes.bool.isRequired,\n      requested: PropTypes.bool.isRequired,\n      prefetched: PropTypes.bool.isRequired,\n      fetched: PropTypes.bool.isRequired\n    }).isRequired\n  ).isRequired,\n  fontsDataStatus: PropTypes.oneOf([\"\", \"fetching\", \"success\", \"failure\"]),\n  listMaxLength: PropTypes.number.isRequired\n};\n\nconst filteredFontsSelector = createFilteredFontsSelector();\n\nconst mapStateToProps = state => {\n  const fonts = getFonts(state);\n  const filters = getFilters(state);\n  const filteredFonts = filteredFontsSelector(fonts, filters);\n  const fontsDataStatus = getFontsDataStatus(state);\n\n  return {\n    fontsDataStatus,\n    filteredFonts,\n    fonts,\n    listMaxLength: Object.keys(fonts).length\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFontsData: () => dispatch(startFetchFontsData())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FontsList);\n","import isEqual from \"lodash.isequal\";\n\nexport default function() {\n  const memo = {\n    filters: {},\n    result: []\n  };\n\n  return function(fonts, filters) {\n    const families = Object.keys(fonts);\n\n    if (families.length === 0) {\n      memo.filters = { ...filters };\n      memo.result = [];\n\n      return [];\n    }\n\n    if (\n      (memo.result.length === 0 && families.length > 0) ||\n      !isEqual(memo.filters, filters)\n    ) {\n      memo.filters = { ...filters };\n\n      const { title, categories, sorting } = filters;\n\n      const filteredFonts = families.filter(family => {\n        const { category } = fonts[family];\n\n        const titleMatch = family\n          .toLowerCase()\n          .includes(title.trim().toLowerCase());\n        const categoryMatch = categories[category];\n\n        return titleMatch && categoryMatch;\n      });\n\n      if (sorting.param === \"alpha\") {\n        const sortedFonts = filteredFonts.sort((a, b) =>\n          a.localeCompare(b, {}, { caseFirst: \"upper\" })\n        );\n\n        memo.result =\n          sorting.order === \"asc\" ? sortedFonts : sortedFonts.reverse();\n      } else {\n        memo.result =\n          sorting.order === \"asc\" ? filteredFonts : filteredFonts.reverse();\n      }\n    }\n\n    return memo.result;\n  };\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport ExpandLessRounded from \"@material-ui/icons/ExpandLessRounded\";\nimport ExpandMoreRounded from \"@material-ui/icons/ExpandMoreRounded\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/SelectedFontsHeaderBar.css\";\n\nconst SelectedFontsHeaderBar = ({\n  folded,\n  selectedFonts,\n  headerBarClickHandler\n}) => {\n  const componentClasses = classNames({\n    SelectedFontsHeaderBar: true,\n    empty: selectedFonts.length === 0\n  });\n\n  return (\n    <div className={componentClasses} onClick={headerBarClickHandler}>\n      <p className=\"text\">\n        <span className=\"num\">{selectedFonts.length}</span>\n        <span>\n          {\" \"}\n          {selectedFonts.length === 1 ? \"family\" : \"families\"} selected\n        </span>\n      </p>\n      <div className=\"icon\">\n        {folded ? <ExpandLessRounded /> : <ExpandMoreRounded />}\n      </div>\n    </div>\n  );\n};\n\nSelectedFontsHeaderBar.propTypes = {\n  folded: PropTypes.bool.isRequired,\n  selectedFonts: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  headerBarClickHandler: PropTypes.func.isRequired\n};\n\nexport default SelectedFontsHeaderBar;\n","import React, { Component } from \"react\";\nimport RemoveIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/SelectedFontItem.css\";\n\nclass SelectedFontItem extends Component {\n  constructor() {\n    super();\n\n    this.item = React.createRef();\n\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\n  }\n\n  handleButtonClick(e) {\n    const { target } = e;\n\n    if (target.closest(\"button\")) {\n      this.item.current.classList.remove(\"active\");\n    }\n  }\n\n  handleTransitionEnd(e) {\n    e.persist();\n\n    if (e.propertyName === \"transform\") {\n      return;\n    }\n\n    const { target } = e;\n    const { family, fontDeselectionHandler } = this.props;\n\n    if (!target.classList.contains(\"active\")) {\n      fontDeselectionHandler(family);\n    }\n  }\n\n  componentDidMount() {\n    if (this.item.current) {\n      this.item.current.classList.add(\"active\");\n    }\n  }\n\n  render() {\n    const { family } = this.props;\n\n    return (\n      <li\n        className=\"SelectedFontItem\"\n        onTransitionEnd={this.handleTransitionEnd}\n        ref={this.item}\n      >\n        <p className=\"font-family\">{family}</p>\n        <button\n          className=\"btn btn-round-small\"\n          onClick={this.handleButtonClick}\n          title=\"Deselect font\"\n          value={family}\n        >\n          <RemoveIcon fontSize=\"default\" />\n        </button>\n      </li>\n    );\n  }\n}\n\nSelectedFontItem.propTypes = {\n  family: PropTypes.string.isRequired,\n  fontDeselectionHandler: PropTypes.func.isRequired\n};\n\nexport default SelectedFontItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectedFontItem from \"./SelectedFontItem\";\nimport \"./styles/SelectedFontsList.css\";\n\nconst SelectedFontsList = ({ fontDeselectionHandler, selectedFonts }) => (\n  <ul className=\"SelectedFontsList\">\n    {selectedFonts.map(family => (\n      <SelectedFontItem\n        family={family}\n        key={family}\n        fontDeselectionHandler={fontDeselectionHandler}\n      />\n    ))}\n  </ul>\n);\n\nSelectedFontsList.propTypes = {\n  fontDeselectionHandler: PropTypes.func.isRequired,\n  selectedFonts: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default SelectedFontsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/SelectedFontsFooter.css\";\n\nconst SelectedFontsFooter = ({ clearSelectedFontsButtonClickHandler }) => (\n  <div className=\"SelectedFontsFooter\">\n    <button\n      className=\"btn btn-no-background\"\n      onClick={clearSelectedFontsButtonClickHandler}\n      title=\"Clear selected fonts\"\n      value=\"clear\"\n    >\n      Clear\n    </button>\n  </div>\n);\n\nSelectedFontsFooter.propTypes = {\n  clearSelectedFontsButtonClickHandler: PropTypes.func.isRequired\n};\n\nexport default SelectedFontsFooter;\n","import React, { Component, Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport PropTypes from \"prop-types\";\nimport SelectedFontsHeaderBar from \"./SelectedFontsHeaderBar\";\nimport SelectedFontsList from \"./SelectedFontsList\";\nimport SelectedFontsFooter from \"./SelectedFontsFooter\";\nimport \"./styles/SelectedFonts.css\";\n\nclass SelectedFonts extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      stage: 0\n    };\n\n    this.main = React.createRef();\n\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleHeaderBarClick = this.handleHeaderBarClick.bind(this);\n    this.handleFontDeselection = this.handleFontDeselection.bind(this);\n    this.handleClearSelectedFontsButtonClick = this.handleClearSelectedFontsButtonClick.bind(\n      this\n    );\n    this.handleTransitionEnd = this.handleTransitionEnd.bind(this);\n  }\n\n  getLifecycleStage() {\n    const stages = {\n      0: \"empty\",\n      1: \"folded\",\n      2: \"unfolding\",\n      3: \"active\",\n      4: \"folding\",\n      5: \"folding-to-clear\"\n    };\n\n    return stages[this.state.stage];\n  }\n\n  handleOutsideClick(e) {\n    const { target } = e;\n    const stage = this.getLifecycleStage();\n\n    if (target.value !== \"undo\" && stage === \"active\") {\n      this.setState({\n        stage: 4\n      });\n    }\n  }\n\n  handleHeaderBarClick(e) {\n    if (!e.target.closest(\".SelectedFontsHeaderBar\")) {\n      return;\n    }\n\n    const stage = this.getLifecycleStage();\n\n    if (stage === \"folded\") {\n      this.setState({\n        stage: 2\n      });\n    }\n\n    if (stage === \"active\") {\n      this.setState({\n        stage: 4\n      });\n    }\n  }\n\n  handleFontDeselection(family) {\n    const stage = this.getLifecycleStage();\n    const { removeFontFromSelected, selectedFonts } = this.props;\n\n    if (selectedFonts.length === 1 && stage === \"active\") {\n      this.setState({\n        stage: 5\n      });\n    }\n\n    if (selectedFonts.length > 1 && stage === \"active\") {\n      removeFontFromSelected(family);\n    }\n  }\n\n  handleClearSelectedFontsButtonClick(e) {\n    const { value } = e.target;\n    const stage = this.getLifecycleStage();\n\n    if (value === \"clear\" && stage === \"active\") {\n      this.setState({\n        stage: 5\n      });\n    }\n  }\n\n  handleTransitionEnd(e) {\n    const { propertyName, target } = e;\n    const classesArr = target.className.split(\" \");\n    const hasCorrespondingClass = classesArr.some(cn => cn === \"SelectedFonts\");\n\n    if (propertyName !== \"transform\" && !hasCorrespondingClass) {\n      return;\n    }\n\n    const stage = this.getLifecycleStage();\n    const {\n      clearSelectedFonts,\n      removeFontFromSelected,\n      selectedFonts\n    } = this.props;\n\n    if (stage === \"unfolding\") {\n      this.setState({\n        stage: 3\n      });\n    }\n\n    if (stage === \"folding\") {\n      this.setState({\n        stage: 1\n      });\n    }\n\n    if (stage === \"folding-to-clear\") {\n      if (this.props.selectedFonts.length === 1) {\n        removeFontFromSelected(selectedFonts[0]);\n      } else {\n        clearSelectedFonts();\n      }\n\n      this.setState({\n        stage: 0\n      });\n    }\n  }\n\n  setComponentsCSSTransform() {\n    const stage = this.getLifecycleStage();\n\n    switch (stage) {\n      case \"unfolding\":\n        return {\n          transform: `translateY(-${this.main.current.clientHeight}px)`\n        };\n      case \"folding\":\n      case \"folding-to-clear\":\n        return {\n          transform: `translateY(${this.main.current.clientHeight}px)`\n        };\n      default:\n        return {};\n    }\n  }\n\n  componentDidUpdate({ selectedFonts: prevSelectedFonts }) {\n    const { selectedFonts } = this.props;\n    if (prevSelectedFonts.length === 0 && selectedFonts.length > 0) {\n      this.setState({\n        stage: 1\n      });\n    }\n\n    if (prevSelectedFonts.length > 0 && selectedFonts.length === 0) {\n      this.setState({\n        stage: 0\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { selectedFonts } = this.props;\n    const { selectedFonts: nextSelectedFonts } = nextProps;\n\n    return (\n      selectedFonts.length !== nextSelectedFonts.length ||\n      this.state.stage !== nextState.stage\n    );\n  }\n\n  render() {\n    const { stage } = this.state;\n    const { selectedFonts } = this.props;\n\n    const componentClasses = classNames({\n      SelectedFonts: true,\n      [this.getLifecycleStage()]: true\n    });\n\n    const componentStyles = this.setComponentsCSSTransform();\n\n    return (\n      <Fragment>\n        <div\n          className={componentClasses}\n          onTransitionEnd={this.handleTransitionEnd}\n          style={componentStyles}\n          title={\n            (stage === 0 && \"Select fonts first\") ||\n            (stage === 1 && \"Click to Expand\") ||\n            (stage === 3 && \"Click to Fold\") ||\n            \"\"\n          }\n        >\n          <OutsideClickHandler\n            disabled={selectedFonts.length === 0 || stage === 0 || stage === 1}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            <SelectedFontsHeaderBar\n              folded={stage < 3}\n              headerBarClickHandler={this.handleHeaderBarClick}\n              selectedFonts={selectedFonts}\n            />\n            {selectedFonts.length > 0 ? (\n              <div className=\"main\" ref={this.main}>\n                <SelectedFontsList\n                  fontDeselectionHandler={this.handleFontDeselection}\n                  selectedFonts={selectedFonts}\n                />\n                <SelectedFontsFooter\n                  clearSelectedFontsButtonClickHandler={\n                    this.handleClearSelectedFontsButtonClick\n                  }\n                />\n              </div>\n            ) : null}\n          </OutsideClickHandler>\n        </div>\n        <div className=\"overlay\" />\n      </Fragment>\n    );\n  }\n}\n\nSelectedFonts.propTypes = {\n  selectedFonts: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  removeFontFromSelected: PropTypes.func.isRequired,\n  clearSelectedFonts: PropTypes.func.isRequired\n};\n\nexport default SelectedFonts;\n","import { connect } from \"react-redux\";\nimport {\n  startRemoveFontFromSelected,\n  startClearSelectedFonts\n} from \"../../actions/selectedFonts\";\nimport { getSelectedFontFamilies } from \"../../reducers/selectedFonts\";\nimport SelectedFonts from \"./SelectedFonts\";\n\nconst mapStateToProps = state => ({\n  selectedFonts: getSelectedFontFamilies(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeFontFromSelected: family =>\n    dispatch(startRemoveFontFromSelected(family)),\n  clearSelectedFonts: () => dispatch(startClearSelectedFonts())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedFonts);\n","import React from \"react\";\nimport TitleFilter from \"./TitleFilter\";\nimport SortingFilter from \"./SortingFilter\";\nimport CategoriesFilter from \"./CategoriesFilter\";\nimport FontsList from \"./FontsList\";\nimport SelectedFontsContainer from \"./SelectedFontsContainer\";\nimport \"./styles/FontsPane.css\";\n\nconst FontsPane = () => (\n  <div className=\"FontsPane\">\n    <TitleFilter />\n    <CategoriesFilter />\n    <SortingFilter />\n    <FontsList />\n    <SelectedFontsContainer />\n  </div>\n);\n\nexport default FontsPane;\n","import { SET_DEFAULT_STATE, SET_FONT_SIZE, SET_TYPE_SCALE } from \"../constants\";\n\nexport const initialState = {\n  fontSize: 16,\n  scale: 1.414\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TYPE_SCALE:\n      return {\n        ...state,\n        scale: action.scale\n      };\n    case SET_FONT_SIZE:\n      return {\n        ...state,\n        fontSize: action.fontSize\n      };\n    case SET_DEFAULT_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const getTypeScale = state => state.styles.present.typeScale;\nexport const getTypeScaleDefaultState = () => ({ ...initialState });\n","import { ELEMENTS } from \"../constants\";\n\nexport const variantToStyle = variant => {\n  const variantElements = variant\n    .split(/(?!\\d{3})(?=italic|normal)/gi)\n    .reverse();\n  const styles = variantElements.join(\" \").replace(\"regular\", \"normal\");\n  return styles;\n};\n\nexport const variantsToStyleOptions = variants =>\n  variants.reduce(\n    (options, variant) => {\n      if (/^\\d{3}$/gi.test(variant)) {\n        variant = `${variant}normal`;\n      }\n      if (variant === \"regular\") {\n        variant = \"400normal\";\n      }\n      if (variant === \"italic\") {\n        variant = \"400italic\";\n      }\n\n      const values = variant.split(/(?!\\d{3})(?=italic|normal)/gi);\n\n      if (!options[\"font-weight\"].includes(values[0])) {\n        options[\"font-weight\"].push(values[0]);\n      }\n      if (!options[\"font-style\"].includes(values[1])) {\n        options[\"font-style\"].push(values[1]);\n      }\n\n      return options;\n    },\n    { \"font-weight\": [], \"font-style\": [] }\n  );\n\nexport const cssPropertyToCamelCased = prop => {\n  const elements = prop.split(\"-\");\n\n  const processedWords = elements.map((element, i) => {\n    if (i === 0) return element;\n\n    return element.replace(/\\b\\w{1}/, match => match.toUpperCase());\n  });\n\n  return processedWords.join(\"\");\n};\n\nexport const isPropTypeHexColor = (props, propName, componentName) => {\n  if (!/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(props[propName])) {\n    return new Error(\n      \"Invalid prop `\" +\n        propName +\n        \"` supplied to\" +\n        \" `\" +\n        componentName +\n        \"`. Validation failed.\"\n    );\n  }\n};\n\nconst generateOptions = selectedFonts =>\n  Object.keys(selectedFonts).reduce((options, family) => {\n    const { variants } = selectedFonts[family];\n    options[family] = variantsToStyleOptions(variants);\n    return options;\n  }, {});\n\nexport const generateElementsStyles = (typeScale, textStyles, fonts) =>\n  ELEMENTS.reduce((elementsStyles, element, idx, src) => {\n    const { fontFamily } = textStyles[element];\n\n    const exponent = element === \"body\" ? idx : src.length - idx - 2;\n\n    elementsStyles[element] = generateElementStylesObject(\n      element,\n      textStyles,\n      typeScale,\n      fonts,\n      fontFamily,\n      exponent\n    );\n\n    return elementsStyles;\n  }, {});\n\nconst generateElementStylesObject = (\n  element,\n  textStyles,\n  typeScale,\n  fonts,\n  family,\n  exponent\n) => ({\n  color: textStyles[element].color,\n  fontFamily: fonts[family]\n    ? `'${textStyles[element].fontFamily}', '${fonts[family].category}'`\n    : family,\n  fontSize: `${(\n    Math.pow(typeScale.scale, exponent) * typeScale.fontSize\n  ).toFixed(2)}px`,\n  fontStyle: textStyles[element].fontStyle,\n  fontWeight: textStyles[element].fontWeight\n});\n\nexport const getPropertyOptions = (\n  property,\n  element,\n  textStyles,\n  selectedFonts\n) => {\n  if (property === \"font-family\") {\n    return Object.keys(selectedFonts).sort((a, b) =>\n      a.localeCompare(b, {}, { caseFirst: \"upper\" })\n    );\n  }\n\n  const options = generateOptions(selectedFonts);\n  const { fontFamily } = textStyles[element];\n\n  return options[fontFamily] && options[fontFamily][property];\n};\n\nexport const getPropertyValue = (textStyles, element, property) => {\n  const camelCasedProp = cssPropertyToCamelCased(property);\n\n  return textStyles[element][camelCasedProp];\n};\n\nconst isSettingsPaneDisabled = state =>\n  state.showcase.fontPreview.isVisible || state.showcase.styles.isVisible;\n\nexport const isControlDisabled = (state, ...rest) =>\n  rest.reduce((acc, curr) => acc || !!curr, isSettingsPaneDisabled(state));\n\nexport const getDefaultVariant = variants => {\n  // returns empty object for default value\n  // of \"font-family\" property (sans-serif)\n  if (!variants) {\n    return {};\n  }\n\n  if (variants.includes(\"regular\")) {\n    return {\n      style: \"normal\",\n      weight: 400\n    };\n  } else if (variants.includes(\"italic\")) {\n    return {\n      style: \"italic\",\n      weight: 400\n    };\n  } else {\n    return {\n      style: variants[0].includes(\"italic\") ? \"italic\" : \"normal\",\n      weight: parseInt(variants[0])\n    };\n  }\n};\n\nexport const numberInputChangeHandler = (\n  inputValue,\n  defaultValue,\n  min,\n  max,\n  callback\n) => {\n  const maxDigits = max.toString().length;\n  const value = inputValue === \"\" ? min : inputValue.slice(0, maxDigits);\n  const parsedValue =\n    value > max\n      ? parseInt(value.slice(0, maxDigits - 1), 10)\n      : parseInt(value, 10);\n\n  if (isNaN(parsedValue)) {\n    callback(defaultValue);\n    return;\n  }\n\n  if (parsedValue >= min && parsedValue <= max) {\n    callback(parsedValue);\n    return;\n  }\n\n  callback(min);\n};\n","import { cssPropertyToCamelCased, getDefaultVariant } from \"../utils\";\nimport {\n  ELEMENTS,\n  SET_DEFAULT_STATE,\n  SET_STYLES_INHERITANCE,\n  UPDATE_ELEMENT_STYLES\n} from \"../constants\";\n\nconst initialState = {\n  inheritStyles: true,\n  fontFamily: \"sans-serif\",\n  fontStyle: \"normal\",\n  fontWeight: 400,\n  color: \"#333\"\n};\n\nconst textStylesReducerDefaultState = ELEMENTS.reduce((res, element) => {\n  if (element !== \"body\") {\n    res[element] = { ...initialState };\n  } else {\n    res[element] = {\n      fontFamily: \"sans-serif\",\n      fontStyle: \"normal\",\n      fontWeight: 400,\n      color: \"#333\"\n    };\n  }\n  return res;\n}, {});\n\nexport default (state = textStylesReducerDefaultState, action) => {\n  switch (action.type) {\n    case SET_STYLES_INHERITANCE:\n      const updates = !state[action.element].inheritStyles ? state.body : {};\n      return {\n        ...state,\n        [action.element]: {\n          ...state[action.element],\n          inheritStyles: !state[action.element].inheritStyles,\n          ...updates\n        }\n      };\n    case UPDATE_ELEMENT_STYLES:\n      return ELEMENTS.reduce(\n        (updatedState, element) => {\n          if (element === action.element) {\n            let updates;\n\n            const property = cssPropertyToCamelCased(action.property);\n\n            if (property === \"fontFamily\") {\n              const { value: font } = action;\n              const variant = getDefaultVariant(font.variants);\n\n              updates = {\n                fontFamily: font.family || initialState.fontFamily,\n                fontStyle: variant.style || initialState.fontStyle,\n                fontWeight: variant.weight || initialState.fontWeight\n              };\n            } else {\n              updates = {\n                [property]: action.value\n              };\n            }\n\n            updatedState[element] = {\n              ...updatedState[element],\n              ...updates\n            };\n          }\n\n          if (updatedState[element].inheritStyles) {\n            updatedState[element] = {\n              ...updatedState[element],\n              ...updatedState.body\n            };\n          }\n\n          return updatedState;\n        },\n        { ...state }\n      );\n    case SET_DEFAULT_STATE:\n      return textStylesReducerDefaultState;\n    default:\n      return state;\n  }\n};\n\nexport const getTextStyles = state => state.styles.present.textStyles;\nexport const getTextStylesDefaultState = () => ({\n  ...textStylesReducerDefaultState\n});\n","import { SET_BACKGROUND_COLOR, SET_DEFAULT_STATE } from \"../constants\";\n\nconst initialState = {\n  color: \"#fff\"\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_BACKGROUND_COLOR:\n      return {\n        ...state,\n        color: action.color\n      };\n    case SET_DEFAULT_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const getBackground = state => state.styles.present.background;\nexport const getBackgroundDefaultState = () => ({ ...initialState });\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isPropTypeHexColor } from \"../../utils\";\nimport { ELEMENTS } from \"../../constants\";\nimport \"./styles/Text.css\";\n\nconst Text = ({ background, elementsStyles }) => (\n  <div\n    className=\"Text\"\n    style={{\n      backgroundColor: `${background.color}`,\n      ...elementsStyles.body\n    }}\n  >\n    <div className=\"text-wrapper\">\n      <h1 style={elementsStyles.h1}>Lorem ipsum dolor sit amet</h1>\n\n      <p style={elementsStyles.p}>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n        ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis\n        dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n        ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n        quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n        arcu.\n      </p>\n\n      <h2 style={elementsStyles.h2}>Sapiente sed voluptatibus neque</h2>\n\n      <p style={elementsStyles.p}>\n        In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam\n        dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus.\n        Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean\n        leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam\n        lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\n        viverra nulla ut metus varius laoreet. Quisque rutrum.\n      </p>\n\n      <ul style={elementsStyles.li}>\n        <li>Lorem ipsum</li>\n        <li>Dolor sit</li>\n        <li>Adipisicing elit</li>\n        <li>Doloribus</li>\n        <li>Odio praesentium</li>\n        <li>Consectetur</li>\n      </ul>\n\n      <p style={elementsStyles.p}>\n        Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper\n        ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus\n        eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing\n        sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar,\n        hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec\n        vitae sapien ut libero venenatis faucibus.\n      </p>\n\n      <h3 style={elementsStyles.h3}>Corrupti quia optio maiores*</h3>\n\n      <p style={elementsStyles.p}>\n        Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum\n        primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac\n        dui quis mi consectetuer lacinia. Nam pretium turpis et arcu. Duis arcu\n        tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed\n        aliquam ultrices mauris. Integer ante arcu, accumsan a, consectetuer\n        eget, posuere ut, mauris. Praesent adipiscing.\n      </p>\n\n      <h4 style={elementsStyles.h4}>Dolorum labore accusamus dolor</h4>\n\n      <p style={elementsStyles.p}>\n        Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis\n        leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna.\n        Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis\n        gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum\n        purus quam, scelerisque ut, mollis sed, nonummy id, metus. Nullam\n        accumsan lorem in dui.\n      </p>\n\n      <h4 style={elementsStyles.h4}>Fuga autem rerum</h4>\n\n      <p style={elementsStyles.p}>\n        Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum\n        volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis\n        vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet\n        feugiat, pede. Sed lectus. Donec mollis hendrerit risus. Phasellus nec\n        sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci.\n        Nunc nec neque.\n      </p>\n\n      <h4 style={elementsStyles.h4}>Sunt facere reprehenderit facilis</h4>\n\n      <p style={elementsStyles.p}>\n        Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi.\n        Curabitur ligula sapien, tincidunt non, euismod vitae, posuere\n        imperdiet, leo. Maecenas malesuada. Praesent congue erat at massa. Sed\n        cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus\n        accumsan cursus velit. Vestibulum ante ipsum primis in faucibus orci\n        luctus et ultrices posuere cubilia Curae; Sed aliquam, nisi quis\n        porttitor congue, elit erat euismod orci, ac placerat dolor lectus quis\n        orci.\n      </p>\n\n      {\n        <p>\n          <small style={elementsStyles.small}>\n            * Fusce id purus. Ut varius tincidunt libero. Phasellus dolor.\n            Maecenas vestibulum mollis\n          </small>\n        </p>\n      }\n    </div>\n  </div>\n);\n\nText.propTypes = {\n  elementsStyles: PropTypes.exact(\n    ELEMENTS.reduce((checks, element) => {\n      checks[element] = PropTypes.exact({\n        color: isPropTypeHexColor,\n        fontFamily: PropTypes.string.isRequired,\n        fontSize: PropTypes.string.isRequired,\n        fontStyle: PropTypes.string.isRequired,\n        fontWeight: PropTypes.number.isRequired\n      });\n\n      return checks;\n    }, {})\n  ),\n  background: PropTypes.exact({\n    color: isPropTypeHexColor\n  }).isRequired\n};\n\nexport default Text;\n","import { connect } from \"react-redux\";\nimport { getTypeScale } from \"../../reducers/typeScale\";\nimport { getTextStyles } from \"../../reducers/textStyles\";\nimport { getBackground } from \"../../reducers/background\";\nimport { getFonts } from \"../../reducers/fonts\";\nimport { generateElementsStyles } from \"../../utils\";\nimport Text from \"./Text\";\n\nconst mapStateToProps = state => {\n  const typeScale = getTypeScale(state);\n  const textStyles = getTextStyles(state);\n  const fonts = getFonts(state);\n\n  return {\n    background: getBackground(state),\n    elementsStyles: generateElementsStyles(typeScale, textStyles, fonts)\n  };\n};\n\nexport default connect(mapStateToProps)(Text);\n","import React from \"react\";\nimport ArrowBackRounded from \"@material-ui/icons/ArrowBackRounded\";\nimport PropTypes from \"prop-types\";\nimport { displayShowcaseText } from \"../../actions/showcase\";\nimport { connect } from \"react-redux\";\nimport \"./styles/ShowcasePaneHeader.css\";\n\nexport const ShowcasePaneHeader = ({ displayShowcaseText }) => (\n  <div className=\"ShowcasePaneHeader\">\n    <button\n      className=\"btn btn-round-big\"\n      onClick={displayShowcaseText}\n      title=\"Back to the sample text\"\n    >\n      <ArrowBackRounded />\n    </button>\n  </div>\n);\n\nShowcasePaneHeader.propTypes = {\n  displayShowcaseText: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  displayShowcaseText: () => dispatch(displayShowcaseText())\n});\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(ShowcasePaneHeader);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/FontPreviewInfo.css\";\n\nconst FontPreviewInfo = ({ family, category, subsets }) => {\n  const style = {\n    fontFamily: `'${family}', ${category}`\n  };\n\n  return (\n    <div className=\"FontPreviewInfo\">\n      <h2 className=\"heading\" style={style}>\n        {family}\n      </h2>\n      <div className=\"category\">\n        <h3 className=\"heading\">Category</h3>\n        <p className=\"category-name\">{category}</p>\n      </div>\n      <div className=\"charsets\">\n        <h3 className=\"heading\">Charsets</h3>\n        <ul className=\"charsets-list\">\n          {subsets.map(subset => (\n            <li key={subset}>{subset}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nFontPreviewInfo.propTypes = {\n  family: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default FontPreviewInfo;\n","import React, { Fragment } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/PreviewFontSizeInput.css\";\n\nconst PreviewFontSizeInput = ({ fontSizeChangeHandler, value }) => (\n  <Fragment>\n    <label className=\"PreviewFontSizeInput label\" htmlFor=\"preview-font-size\">\n      Font size (px)\n    </label>\n    <input\n      className=\"PreviewFontSizeInput input\"\n      id=\"preview-font-size\"\n      type=\"number\"\n      name=\"font-size\"\n      min=\"1\"\n      max=\"100\"\n      value={value}\n      onChange={debounce(fontSizeChangeHandler, 100, {\n        leading: true\n      })}\n    />\n  </Fragment>\n);\n\nPreviewFontSizeInput.propTypes = {\n  fontSizeChangeHandler: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nexport default PreviewFontSizeInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/PreviewFontSizeReset.css\";\n\nconst PreviewFontSizeReset = ({ resetFontSizeHandler }) => (\n  <button\n    className=\"PreviewFontSizeReset btn-blue-rect\"\n    onClick={resetFontSizeHandler}\n    value=\"reset\"\n    title=\"Reset font size\"\n  >\n    Reset\n  </button>\n);\n\nPreviewFontSizeReset.propTypes = {\n  resetFontSizeHandler: PropTypes.func.isRequired\n};\n\nexport default PreviewFontSizeReset;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SHOWCASE_STRING } from \"../../constants\";\nimport { variantToStyle } from \"../../utils\";\nimport \"./styles/FontPreviewVariants.css\";\n\nconst FontPreviewVariants = ({ category, family, fontSize, variants }) => (\n  <div className=\"FontPreviewVariants\">\n    {variants.map(variant => {\n      const style = {\n        example: `${variantToStyle(\n          variant\n        )} ${fontSize}px ${family}, ${category}`,\n        value: `${variantToStyle(variant)} 16px ${family}, ${category}`\n      };\n\n      return (\n        <dl className=\"variant\" key={variant}>\n          {\n            <dt className=\"variant-value\" style={{ font: style.value }}>\n              {variant}\n            </dt>\n          }\n          <dd className=\"variant-example\" style={{ font: style.example }}>\n            {SHOWCASE_STRING}\n          </dd>\n        </dl>\n      );\n    })}\n  </div>\n);\n\nFontPreviewVariants.propTypes = {\n  category: PropTypes.string.isRequired,\n  family: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default FontPreviewVariants;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DEFAULT_FONT_SIZE } from \"../../constants\";\nimport PreviewFontSizeInput from \"./PreviewFontSizeInput\";\nimport PreviewFontSizeReset from \"./PreviewFontSizeReset\";\nimport FontPreviewVariants from \"./FontPreviewVariants\";\nimport { numberInputChangeHandler } from \"../../utils\";\nimport \"./styles/FontPreviewStyles.css\";\n\nclass FontPreviewStyles extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fontSize: DEFAULT_FONT_SIZE\n    };\n\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\n    this.handleResetFontSize = this.handleResetFontSize.bind(this);\n  }\n\n  handleFontSizeChange(e) {\n    numberInputChangeHandler(e.target.value, 16, 1, 100, fontSize => {\n      this.setState({ fontSize });\n    });\n  }\n\n  handleResetFontSize() {\n    this.resetFontSize();\n  }\n\n  resetFontSize() {\n    this.setState({\n      fontSize: DEFAULT_FONT_SIZE\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.family !== this.props.family) {\n      this.resetFontSize();\n    }\n  }\n\n  render() {\n    const { family, category, variants } = this.props;\n\n    const { fontSize } = this.state;\n\n    return (\n      <div className=\"FontPreviewStyles\">\n        <h3 className=\"heading\">Styles</h3>\n        <div className=\"font-size-controls\">\n          <PreviewFontSizeInput\n            fontSizeChangeHandler={this.handleFontSizeChange}\n            value={fontSize}\n          />\n          <PreviewFontSizeReset\n            resetFontSizeHandler={this.handleResetFontSize}\n          />\n        </div>\n        <FontPreviewVariants\n          category={category}\n          family={family}\n          fontSize={fontSize}\n          variants={variants}\n        />\n      </div>\n    );\n  }\n}\n\nFontPreviewStyles.propTypes = {\n  category: PropTypes.string.isRequired,\n  family: PropTypes.string.isRequired,\n  variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nexport default FontPreviewStyles;\n","import {\n  DISPLAY_SHOWCASE_FONT_PREVIEW,\n  DISPLAY_SHOWCASE_TEXT,\n  DISPLAY_STYLES\n} from \"../constants\";\nimport { getFonts } from \"../reducers/fonts\";\n\nconst initialState = {\n  text: {\n    isVisible: true\n  },\n  fontPreview: {\n    isVisible: false,\n    family: undefined\n  },\n  styles: {\n    isVisible: false\n  }\n};\n\n// This state object being used for updates in reducer fucntion\nconst showcaseState = {\n  ...initialState,\n  text: {\n    isVisible: false\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case DISPLAY_SHOWCASE_TEXT:\n      return {\n        ...showcaseState,\n        text: {\n          isVisible: true\n        }\n      };\n    case DISPLAY_SHOWCASE_FONT_PREVIEW:\n      return {\n        ...showcaseState,\n        fontPreview: {\n          isVisible: true,\n          family: action.family\n        }\n      };\n    case DISPLAY_STYLES:\n      return {\n        ...showcaseState,\n        styles: {\n          isVisible: true\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getPreviewFont = state => {\n  const { family } = state.showcase.fontPreview;\n  const fonts = getFonts(state);\n\n  return { ...fonts[family] };\n};\n","import React, { Component, Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Spinner\";\nimport FontPreviewInfo from \"./FontPreviewInfo\";\nimport FontPreviewStyles from \"./FontPreviewStyles\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport ErrorOutline from \"@material-ui/icons/ErrorOutlineRounded\";\nimport { startFetchFont } from \"../../actions/fonts\";\nimport { getPreviewFont } from \"../../reducers/showcase\";\nimport \"./styles/FontPreview.css\";\n\nexport class FontPreview extends Component {\n  constructor() {\n    super();\n\n    // Show spinner by default on component mount\n    this.state = { showSpinner: true };\n\n    this.handleTryAgainButtonClick = this.handleTryAgainButtonClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Hide spinner if WebFontLoader callback (either\n    // \"fontactive\" or \"fontinactive\") has been invoked\n    if (prevProps.fetching && !this.props.fetching) {\n      this.setState({ showSpinner: false });\n    }\n\n    // Show spinner if preview font family\n    // has changed and it has not been fetched yet\n    if (prevProps.family !== this.props.family && !this.props.fetched) {\n      this.setState({ showSpinner: true });\n    }\n  }\n\n  handleTryAgainButtonClick() {\n    this.setState({ showSpinner: true });\n    this.props.fetchFont(this.props.family);\n  }\n\n  render() {\n    const { category, family, fetched, subsets, variants } = this.props;\n    const componentClasses = classNames({\n      FontPreview: true,\n      fetching: this.state.showSpinner,\n      error: !this.state.showSpinner && !fetched\n    });\n\n    return (\n      <div className={componentClasses}>\n        {this.state.showSpinner ? (\n          <Spinner />\n        ) : fetched ? (\n          <Fragment>\n            <FontPreviewInfo\n              category={category}\n              family={family}\n              subsets={subsets}\n            />\n            <FontPreviewStyles\n              category={category}\n              family={family}\n              variants={variants}\n            />\n          </Fragment>\n        ) : (\n          <ErrorMessage>\n            <div className=\"test-wrapper\">\n              <div className=\"msg\">\n                <ErrorOutline fontSize=\"large\" />\n                <p className=\"text\">Preview is unavailable.</p>\n                <p className=\"text\">The font has not been loaded.</p>\n              </div>\n              <button\n                className=\"btn btn-blue-rect\"\n                onClick={this.handleTryAgainButtonClick}\n              >\n                Try again\n              </button>\n            </div>\n          </ErrorMessage>\n        )}\n      </div>\n    );\n  }\n}\n\nFontPreview.propTypes = {\n  category: PropTypes.string.isRequired,\n  family: PropTypes.string.isRequired,\n  fetched: PropTypes.bool.isRequired,\n  fetchFont: PropTypes.func.isRequired,\n  fetching: PropTypes.bool.isRequired,\n  subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n};\n\nconst mapStateToProps = state => getPreviewFont(state);\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFont: family => dispatch(startFetchFont(family))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FontPreview);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Clipboard from \"clipboard\";\nimport Copy from \"@material-ui/icons/FileCopyOutlined\";\nimport { addNotification } from \"../../actions/notifications\";\nimport \"./styles/CopyToClipboardButton.css\";\n\nexport class CopyToClipboardButton extends Component {\n  clipboard = null;\n\n  constructor() {\n    super();\n\n    this.handleCopySuccess = this.handleCopySuccess.bind(this);\n    this.handleCopyError = this.handleCopyError.bind(this);\n  }\n\n  handleCopySuccess(e) {\n    e.clearSelection();\n\n    if (!this.props.notificationActive) {\n      this.props.addNotification(\"Copied to clipboard\");\n    }\n  }\n\n  handleCopyError() {\n    if (!this.props.notificationActive) {\n      this.props.addNotification(\"Unable to copy to clipboard\");\n    }\n  }\n\n  componentDidMount() {\n    this.clipboard = new Clipboard(\".CopyToClipboardButton\");\n    this.clipboard.on(\"success\", this.handleCopySuccess);\n    this.clipboard.on(\"error\", this.handleCopyError);\n  }\n\n  componentWillUnmount() {\n    this.clipboard.destroy();\n  }\n\n  render() {\n    return (\n      <button\n        className=\"CopyToClipboardButton btn-blue-rect\"\n        data-clipboard-target={`#${this.props.target}`}\n        disabled={false}\n        title=\"Copy to clipboard\"\n        value=\"copy\"\n      >\n        <span className=\"icon\">\n          <Copy fontSize=\"small\" />\n        </span>\n        Copy to clipboard\n      </button>\n    );\n  }\n}\n\nCopyToClipboardButton.propTypes = {\n  notificationActive: PropTypes.bool.isRequired,\n  target: PropTypes.string.isRequired,\n  addNotification: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  notificationActive: !!state.notifications[\"clipboard\"].current\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNotification: text => dispatch(addNotification(text, \"clipboard\"))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CopyToClipboardButton);\n","import { ELEMENTS } from \"../constants\";\n\nexport default (styles, fonts) => {\n  const { typeScale, textStyles } = styles;\n\n  const variants = collectSelectedFontVariants(textStyles, ELEMENTS);\n  const elementsValues = generateElementsValues(styles, fonts);\n\n  const templateValues = [\n    generateImportString(variants),\n    generateRootElementTemplate(typeScale),\n    generateElementsTemplate(elementsValues)\n  ];\n\n  return templateValues.reduce((template, value, idx, src) => {\n    const newLine = idx !== src.length - 1 ? \"\\n\\n\" : \"\";\n    return value ? template.concat(value, newLine) : template;\n  }, \"\");\n};\n\nconst generateImportString = variants => {\n  if (Object.keys(variants).length === 0) {\n    return \"\";\n  }\n\n  // Google Fonts API base URL\n  const gFontsBaseUrl = \"https://fonts.googleapis.com/css\";\n\n  // Generate query string according to Google Fonts API requirements\n  // https://developers.google.com/fonts/docs/getting_started\n  const query = Object.keys(variants).reduce(\n    (queryStr, fontFamily, idx, src) => {\n      const fontFamilyQueryStr = fontFamily.replace(/\\s/gi, () => \"+\");\n      const delimiter = idx !== src.length - 1 ? \"|\" : \"\";\n      const fontVariantsSorted = variants[fontFamily].sort(\n        (a, b) => parseInt(a, 10) - parseInt(b, 10)\n      );\n\n      return queryStr.concat(\n        `${fontFamilyQueryStr}:${fontVariantsSorted.join(\",\")}${delimiter}`\n      );\n    },\n    \"\"\n  );\n\n  return `@import url('${gFontsBaseUrl}?family=${query}');`;\n};\n\nconst collectSelectedFontVariants = (styles, elements) =>\n  elements.reduce((variants, element) => {\n    const family = styles[element].fontFamily;\n\n    if (family === \"sans-serif\") {\n      return variants;\n    }\n\n    if (!variants[family]) {\n      variants[family] = [];\n    }\n\n    const { fontStyle, fontWeight } = styles[element];\n\n    const style = fontStyle === \"normal\" ? \"\" : \"i\";\n    const variant = `${fontWeight}${style}`;\n\n    if (!variants[family].includes(variant)) {\n      variants[family].push(variant);\n    }\n\n    return variants;\n  }, {});\n\nconst generateRootElementTemplate = typeScale =>\n  `:root {\n  --base-font-size: ${typeScale.fontSize}px;\n  --scale-ratio: ${typeScale.scale};\n\n  --font-xs:  calc(var(--base-font-size) / var(--scale-ratio));\n  --font-sm:  var(--base-font-size);\n  --font-md:  calc(var(--font-sm) * var(--scale-ratio));\n  --font-lg:  calc(var(--font-md) * var(--scale-ratio));\n  --font-xl:  calc(var(--font-lg) * var(--scale-ratio));\n  --font-xxl: calc(var(--font-xl) * var(--scale-ratio));\n\n  font-size: var(--font-sm);\n}`;\n\nconst getElementFontSizeVariable = element => {\n  const fontSizeVariableOptions = {\n    h1: \"--font-xxl\",\n    h2: \"--font-xl\",\n    h3: \"--font-lg\",\n    h4: \"--font-md\",\n    small: \"--font-xs\"\n  };\n\n  return fontSizeVariableOptions[element];\n};\n\nconst generateElementsValues = (styles, fonts) => {\n  const { textStyles, background } = styles;\n\n  const elementsValues = ELEMENTS.reduce((values, element) => {\n    values[element] = \"\";\n\n    const { fontFamily, fontStyle, fontWeight, color } = textStyles[element];\n\n    // <body> background-color\n    if (element === \"body\") {\n      const { color: backgroundColor } = background;\n\n      values[element] = values[element].concat(\n        `  background-color: ${backgroundColor};\\n`\n      );\n    }\n\n    // color\n    if (\n      element === \"body\" ||\n      (element !== \"body\" && color !== textStyles.body.color)\n    ) {\n      values[element] = values[element].concat(`  color: ${color};\\n`);\n    }\n\n    // font-family\n    if (\n      element === \"body\" ||\n      (element !== \"body\" && fontFamily !== textStyles.body.fontFamily)\n    ) {\n      const category = fonts[fontFamily]\n        ? fonts[fontFamily].category\n        : \"sans-serif\";\n\n      const fontFamilyValue =\n        fontFamily === category\n          ? `'${category}'`\n          : `'${fontFamily}', '${category}'`;\n\n      values[element] = values[element].concat(\n        `  font-family: ${fontFamilyValue};\\n`\n      );\n    }\n\n    // font-size\n    if (element !== \"body\" && element !== \"li\") {\n      const fontSizeValue = getElementFontSizeVariable(element);\n\n      values[element] = values[element].concat(\n        `  font-size: var(${fontSizeValue});\\n`\n      );\n    }\n\n    // font-style\n    if (\n      element === \"body\" ||\n      (element !== \"body\" && fontStyle !== textStyles.body.fontStyle)\n    ) {\n      const fontStyleValue = fontStyle === \"italic\" ? fontStyle : \"\";\n\n      values[element] = fontStyleValue\n        ? values[element].concat(`  font-style: ${fontStyleValue};\\n`)\n        : values[element];\n    }\n\n    // font-weight\n    if (\n      element === \"body\" ||\n      (element !== \"body\" && fontWeight !== textStyles.body.fontWeight)\n    ) {\n      values[element] = values[element].concat(\n        `  font-weight: ${fontWeight};\\n`\n      );\n    }\n\n    // <body> line-height\n    if (element === \"body\") {\n      values[element] = values[element].concat(`  line-height: 1.5;\\n`);\n    }\n\n    // <h1> margin-top\n    if (element === \"h1\") {\n      values[element] = values[element].concat(`  margin-top: 0;\\n`);\n    }\n\n    // <p> margin-bottom\n    if (element === \"body\") {\n      values[\"p\"] = \"p {\\n  margin-bottom: 1.25em;\\n}\";\n    }\n\n    // headers' margins\n    if (element === \"body\") {\n      values[\"headers\"] =\n        \"h1, h2, h3, h4, h5 {\\n  margin: 2.75rem 0 1rem;\\n  line-height: 1.2;\\n}\";\n    }\n\n    // add selector and wrap styles into curly braces\n    if (values[element]) {\n      values[element] = `${element} {\\n${values[element]}}`;\n    }\n\n    return values;\n  }, {});\n\n  return elementsValues;\n};\n\nconst generateElementsTemplate = values =>\n  Object.keys(values).reduce((template, element, idx, src) => {\n    if (values[element]) {\n      const newLine = idx === src.length - 1 ? \"\\n\" : \"\\n\\n\";\n\n      template = template.concat(`${values[element]}${newLine}`);\n    }\n    return template;\n  }, \"\");\n","import React, { Component } from \"react\";\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport css from \"react-syntax-highlighter/dist/languages/hljs/css\";\nimport docco from \"react-syntax-highlighter/dist/styles/hljs/docco\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport CopyToClipboardButton from \"./CopyToClipboardButton\";\nimport template from \"../../template/styles\";\nimport { isPropTypeHexColor } from \"../../utils\";\nimport { ELEMENTS } from \"../../constants\";\nimport { getFonts } from \"../../reducers/fonts\";\nimport \"./styles/StylesView.css\";\n\nexport class StylesView extends Component {\n  componentDidMount() {\n    SyntaxHighlighter.registerLanguage(\"css\", css);\n  }\n\n  shouldComponentUpdate() {\n    // Prevents unnecessary re-rendering on redux fonts update.\n    // Since styles disabled from any updates when StylesView\n    // component is displayed, they do not trigger any re-rendering\n    return false;\n  }\n\n  render() {\n    const { fonts, styles } = this.props;\n    const target = \"code-snippet\";\n\n    return (\n      <div className=\"StylesView\">\n        <SyntaxHighlighter\n          language=\"css\"\n          style={docco}\n          customStyle={{\n            whiteSpace: \"pre-wrap\",\n            borderRadius: \"6px\",\n            padding: \"2rem\"\n          }}\n          children={template(styles, fonts)}\n          id={target}\n        />\n        <div className=\"controls\">\n          <CopyToClipboardButton target={target} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst elementChecks = {\n  fontFamily: PropTypes.string.isRequired,\n  fontStyle: PropTypes.string.isRequired,\n  fontWeight: PropTypes.number.isRequired,\n  color: isPropTypeHexColor\n};\n\nStylesView.propTypes = {\n  fonts: PropTypes.objectOf(\n    PropTypes.exact({\n      family: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n      variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      fetching: PropTypes.bool.isRequired,\n      active: PropTypes.bool.isRequired,\n      requested: PropTypes.bool.isRequired,\n      prefetched: PropTypes.bool.isRequired,\n      fetched: PropTypes.bool.isRequired\n    }).isRequired\n  ).isRequired,\n  styles: PropTypes.exact({\n    typeScale: PropTypes.exact({\n      fontSize: PropTypes.number.isRequired,\n      scale: PropTypes.number.isRequired\n    }).isRequired,\n    textStyles: PropTypes.exact(\n      ELEMENTS.reduce((checks, element) => {\n        if (element === \"body\") {\n          checks[element] = PropTypes.exact(elementChecks).isRequired;\n        } else {\n          checks[element] = PropTypes.exact({\n            inheritStyles: PropTypes.bool.isRequired,\n            ...elementChecks\n          });\n        }\n\n        return checks;\n      }, {})\n    ).isRequired,\n    background: PropTypes.shape({\n      color: isPropTypeHexColor\n    }).isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  fonts: getFonts(state),\n  styles: state.styles.present\n});\n\nexport default connect(mapStateToProps)(StylesView);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SampleText from \"./SampleText\";\nimport ShowcasePaneHeader from \"./ShowcasePaneHeader\";\nimport FontPreview from \"./FontPreview\";\nimport StylesView from \"./StylesView\";\nimport \"./styles/ShowcasePane.css\";\n\nexport const ShowcasePane = ({\n  textIsVisible,\n  fontPreviewIsVisible,\n  stylesIsVisible\n}) => (\n  <div className=\"ShowcasePane\">\n    {(textIsVisible && <SampleText />) || (\n      <Fragment>\n        <ShowcasePaneHeader />\n        {(stylesIsVisible && <StylesView />) ||\n          (fontPreviewIsVisible && <FontPreview />)}\n      </Fragment>\n    )}\n  </div>\n);\n\nShowcasePane.propTypes = {\n  textIsVisible: PropTypes.bool.isRequired,\n  fontPreviewIsVisible: PropTypes.bool.isRequired,\n  stylesIsVisible: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  textIsVisible: state.showcase.text.isVisible,\n  fontPreviewIsVisible: state.showcase.fontPreview.isVisible,\n  stylesIsVisible: state.showcase.styles.isVisible\n});\n\nexport default connect(mapStateToProps)(ShowcasePane);\n","import React from \"react\";\nimport debounce from \"lodash.debounce\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/BaseFontSizeInput.css\";\n\nconst BaseFontSizeInput = ({ disabled, value, fontSizeChangeHandler }) => (\n  <div className=\"BaseFontSizeInput\">\n    <label className=\"label\" htmlFor=\"base-font-size\">\n      Font size (px)\n    </label>\n    <input\n      disabled={disabled}\n      id=\"base-font-size\"\n      min=\"1\"\n      max=\"50\"\n      name=\"fontSize\"\n      onChange={debounce(fontSizeChangeHandler, 100, {\n        leading: true\n      })}\n      type=\"number\"\n      value={value}\n    />\n  </div>\n);\n\nBaseFontSizeInput.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n  fontSizeChangeHandler: PropTypes.func.isRequired\n};\n\nexport default React.memo(BaseFontSizeInput);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SCALE_VALUES } from \"../../constants\";\nimport \"./styles/ScaleValueSelectList.css\";\n\nconst ScaleValueSelectList = ({ disabled, value, scaleChangeHandler }) => (\n  <div className=\"ScaleValueSelectList\">\n    <label className=\"label\" htmlFor=\"scale-value\">\n      Scale value\n    </label>\n    <select\n      disabled={disabled}\n      id=\"scale-value\"\n      name=\"scaleValue\"\n      onChange={scaleChangeHandler}\n      value={value}\n    >\n      {Object.keys(SCALE_VALUES).map(scaleValue => (\n        <option key={scaleValue} value={scaleValue}>\n          {`${scaleValue} - ${SCALE_VALUES[scaleValue]}`}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nScaleValueSelectList.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n  scaleChangeHandler: PropTypes.func.isRequired\n};\n\nexport default React.memo(ScaleValueSelectList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BaseFontSizeInput from \"./BaseFontSizeInput\";\nimport ScaleValueSelectList from \"./ScaleValueSelectList\";\nimport { numberInputChangeHandler } from \"../../utils\";\nimport \"./styles/TypeScale.css\";\n\nclass TypeScale extends Component {\n  constructor() {\n    super();\n\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\n    this.handleScaleChange = this.handleScaleChange.bind(this);\n  }\n\n  handleFontSizeChange(e) {\n    numberInputChangeHandler(e.target.value, 16, 1, 100, fontSize => {\n      this.props.setFontSize(fontSize);\n    });\n  }\n\n  handleScaleChange(e) {\n    const { value } = e.target;\n    this.props.setTypeScale(parseFloat(value));\n  }\n\n  render() {\n    const { disabled, typeScale } = this.props;\n\n    return (\n      <div className=\"TypeScale\">\n        <p className=\"group-label\">Type Scale</p>\n        <BaseFontSizeInput\n          disabled={disabled}\n          fontSizeChangeHandler={this.handleFontSizeChange}\n          value={typeScale.fontSize}\n        />\n        <ScaleValueSelectList\n          disabled={disabled}\n          scaleChangeHandler={this.handleScaleChange}\n          value={typeScale.scale}\n        />\n      </div>\n    );\n  }\n}\n\nTypeScale.propTypes = {\n  typeScale: PropTypes.exact({\n    fontSize: PropTypes.number.isRequired,\n    scale: PropTypes.number.isRequired\n  }).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  setFontSize: PropTypes.func.isRequired,\n  setTypeScale: PropTypes.func.isRequired\n};\n\nexport default TypeScale;\n","import { connect } from \"react-redux\";\nimport { setTypeScale, setFontSize } from \"../../actions/typeScale\";\nimport { getTypeScale } from \"../../reducers/typeScale\";\nimport { isControlDisabled } from \"../../utils\";\nimport TypeScale from \"./TypeScale\";\n\nconst mapStateToProps = state => ({\n  typeScale: getTypeScale(state),\n  disabled: isControlDisabled(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFontSize: fontSize => dispatch(setFontSize(fontSize)),\n  setTypeScale: scale => dispatch(setTypeScale(scale))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TypeScale);\n","import {\n  SET_DEFAULT_TYPE_SCALE_STATE,\n  SET_FONT_SIZE,\n  SET_TYPE_SCALE\n} from \"../constants\";\n\nexport const setTypeScale = (scale = 1.414) => ({\n  type: SET_TYPE_SCALE,\n  scale\n});\n\nexport const setFontSize = (fontSize = 16) => ({\n  type: SET_FONT_SIZE,\n  fontSize\n});\n\nexport const setDefaultTypeScaleState = () => ({\n  type: SET_DEFAULT_TYPE_SCALE_STATE\n});\n","import { SET_STYLES_INHERITANCE, UPDATE_ELEMENT_STYLES } from \"../constants\";\n\nexport const setStylesInheritance = element => ({\n  type: SET_STYLES_INHERITANCE,\n  element\n});\n\nexport const updateElementStyles = (element, property, value) => ({\n  type: UPDATE_ELEMENT_STYLES,\n  element,\n  property,\n  value\n});\n","import React, { Component } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateElementStyles } from \"../../actions/textStyles\";\nimport \"./styles/StylingPropertySelectList.css\";\n\nexport class StylingPropertySelectList extends Component {\n  constructor() {\n    super();\n\n    this.handleStylePropertyChange = this.handleStylePropertyChange.bind(this);\n    this.getStylePropertyValueFromEvent = this.getStylePropertyValueFromEvent.bind(\n      this\n    );\n  }\n\n  handleStylePropertyChange(e) {\n    const { element, property } = this.props;\n    const value = this.getStylePropertyValueFromEvent(e);\n\n    this.props.updateElementStyles(element, property, value);\n  }\n\n  getStylePropertyValueFromEvent(event) {\n    const { selectedFonts, property } = this.props;\n    const { value } = event.target;\n\n    if (property === \"font-family\") {\n      return selectedFonts[value] ? selectedFonts[value] : value;\n    }\n\n    if (property === \"font-weight\") {\n      return parseInt(value, 10);\n    }\n\n    return value;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.disabled !== nextProps.disabled) {\n      return true;\n    }\n\n    if (this.props.value !== nextProps.value) {\n      return true;\n    }\n\n    if (\n      Object.keys(this.props.selectedFonts).length !==\n      Object.keys(nextProps.selectedFonts).length\n    ) {\n      return true;\n    }\n\n    if (!isEqual(this.props.options, nextProps.options)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const { disabled, element, options, property, value } = this.props;\n    const componentClasses = classNames({\n      StylingPropertySelectList: true,\n      disabled\n    });\n\n    return (\n      <div className={componentClasses}>\n        <label className=\"label\" htmlFor={`${element}-${property}`}>\n          {property.replace(/^\\w{1}|-/gi, (match, idx) =>\n            idx === 0 ? match.toUpperCase() : \" \"\n          )}\n        </label>\n        <select\n          className=\"select-list\"\n          disabled={disabled}\n          id={`${element}-${property}`}\n          name={property}\n          onChange={this.handleStylePropertyChange}\n          value={value}\n        >\n          {options ? (\n            [\n              property === \"font-family\" && (\n                <option key=\"default\" value=\"default\">\n                  sans-sefir\n                </option>\n              ),\n              ...options.map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))\n            ]\n          ) : (\n            <option key=\"default\" value=\"default\">\n              {value}\n            </option>\n          )}\n        </select>\n      </div>\n    );\n  }\n}\n\nStylingPropertySelectList.propTypes = {\n  disabled: PropTypes.bool,\n  element: PropTypes.string.isRequired,\n  selectedFonts: PropTypes.objectOf(\n    PropTypes.exact({\n      family: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n      variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      fetching: PropTypes.bool.isRequired,\n      active: PropTypes.bool.isRequired,\n      requested: PropTypes.bool.isRequired,\n      prefetched: PropTypes.bool.isRequired,\n      fetched: PropTypes.bool.isRequired\n    }).isRequired\n  ).isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  property: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  updateElementStyles: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateElementStyles: (element, property, value) =>\n    dispatch(updateElementStyles(element, property, value))\n});\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(StylingPropertySelectList);\n","import React from \"react\";\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxOutlined from \"@material-ui/icons/CheckBoxOutlined\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/StylesInheritanceInput.css\";\n\nconst StylesInheritanceInput = ({\n  disabled,\n  element,\n  inheritStyles,\n  stylesInheritanceChangeHandler\n}) => (\n  <div className=\"StylesInheritanceInput\">\n    <input\n      className=\"inheritance-input\"\n      checked={inheritStyles}\n      disabled={disabled}\n      name=\"inheritStyles\"\n      id={`${element}-inherit-styles`}\n      onChange={stylesInheritanceChangeHandler}\n      type=\"checkbox\"\n      value={element}\n    />\n    <label className=\"label\" htmlFor={`${element}-inherit-styles`}>\n      <div className=\"checkbox-icon\">\n        {inheritStyles ? <CheckBoxOutlined /> : <CheckBoxOutlineBlank />}\n      </div>\n      Inherit <code className=\"code\"> &lt;body&gt;</code> styles\n    </label>\n  </div>\n);\n\nStylesInheritanceInput.propTypes = {\n  disabled: PropTypes.bool,\n  element: PropTypes.string.isRequired,\n  inheritStyles: PropTypes.bool.isRequired,\n  stylesInheritanceChangeHandler: PropTypes.func.isRequired\n};\n\nexport default React.memo(StylesInheritanceInput);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { SketchPicker } from \"react-color\";\nimport PropTypes from \"prop-types\";\nimport { MIN_GAP } from \"../../constants\";\nimport { isPropTypeHexColor } from \"../../utils\";\nimport \"./styles/ColorPicker.css\";\n\nclass ColorPicker extends Component {\n  constructor() {\n    super();\n\n    this.containerRef = React.createRef();\n\n    this.state = {\n      displayColorPicker: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(({ displayColorPicker }) => ({\n      displayColorPicker: !displayColorPicker\n    }));\n  }\n\n  handleOutsideClick() {\n    this.setState({\n      displayColorPicker: false\n    });\n  }\n\n  getPickerPositionClass() {\n    if (!this.containerRef.current) {\n      return;\n    }\n\n    const viewportHeight = document.documentElement.clientHeight;\n    const containerCoords = this.containerRef.current.getBoundingClientRect();\n    const gap = viewportHeight - containerCoords.bottom;\n\n    return gap > MIN_GAP ? \"below\" : \"above\";\n  }\n\n  getPicker() {\n    if (!this.state.displayColorPicker) return null;\n\n    const pickerPositionClass = this.getPickerPositionClass();\n    const pickerClasses = classNames({\n      picker: true,\n      above: pickerPositionClass === \"above\",\n      below: pickerPositionClass === \"below\"\n    });\n\n    const { color, colorChangeHandler } = this.props;\n    return (\n      <div className={pickerClasses}>\n        <SketchPicker\n          disableAlpha={true}\n          color={color}\n          onChangeComplete={colorChangeHandler}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { color, disabled } = this.props;\n\n    const componentClasses = classNames({\n      ColorPicker: true,\n      active: this.state.displayColorPicker,\n      disabled\n    });\n\n    const colorPicker = this.getPicker();\n\n    return (\n      <OutsideClickHandler\n        onOutsideClick={this.handleOutsideClick}\n        disabled={!this.state.displayColorPicker}\n      >\n        <div className={componentClasses}>\n          <div\n            className=\"active-container\"\n            onClick={!disabled ? this.handleClick : null}\n            ref={this.containerRef}\n          >\n            <div className=\"icon\">\n              <div className=\"color\" style={{ background: color }} />\n            </div>\n          </div>\n          {colorPicker}\n        </div>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nColorPicker.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  colorChangeHandler: PropTypes.func.isRequired,\n  color: isPropTypeHexColor\n};\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ColorPicker from \"./ColorPicker\";\nimport {\n  isPropTypeHexColor,\n  isControlDisabled,\n  getPropertyValue\n} from \"../../utils\";\nimport { getTextStyles } from \"../../reducers/textStyles\";\nimport { updateElementStyles } from \"../../actions/textStyles\";\nimport \"./styles/ElementColor.css\";\n\nexport class ElementColor extends Component {\n  constructor() {\n    super();\n\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleColorChange({ hex }) {\n    this.props.updateElementStyles(this.props.element, hex);\n  }\n\n  render() {\n    const { color, disabled } = this.props;\n\n    return (\n      <div className=\"ElementColor\">\n        <p className=\"label\">Color</p>\n        <ColorPicker\n          disabled={disabled}\n          colorChangeHandler={this.handleColorChange}\n          color={color}\n        />\n      </div>\n    );\n  }\n}\n\nElementColor.propTypes = {\n  color: isPropTypeHexColor,\n  disabled: PropTypes.bool.isRequired,\n  element: PropTypes.string.isRequired,\n  updateElementStyles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state, { element }) => {\n  const textStyles = getTextStyles(state);\n\n  return {\n    color: getPropertyValue(textStyles, element, \"color\"),\n    disabled: isControlDisabled(state, textStyles[element].inheritStyles),\n    element\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateElementStyles: (element, value) =>\n    dispatch(updateElementStyles(element, \"color\", value))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ElementColor);\n","import React, { Component } from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { ELEMENTS } from \"../../constants\";\nimport StylingPropertySelectList from \"./StylingPropertySelectList\";\nimport StylesInheritanceInput from \"./StylesInheritanceInput\";\nimport ElementColor from \"./ElementColor\";\nimport { getSelectedFonts } from \"../../reducers/selectedFonts\";\nimport { getTextStyles } from \"../../reducers/textStyles\";\nimport {\n  isControlDisabled,\n  getPropertyOptions,\n  getPropertyValue\n} from \"../../utils\";\nimport { setStylesInheritance } from \"../../actions/textStyles\";\nimport { isPropTypeHexColor } from \"../../utils\";\nimport \"./styles/Elements.css\";\n\nexport class Elements extends Component {\n  constructor() {\n    super();\n\n    this.handleStylesInheritanceChange = this.handleStylesInheritanceChange.bind(\n      this\n    );\n  }\n\n  handleStylesInheritanceChange(e) {\n    const { value } = e.target;\n    this.props.setStylesInheritance(value);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.disabled !== nextProps.disabled) {\n      return true;\n    }\n\n    if (!isEqual(this.props.selectedFonts, nextProps.selectedFonts)) {\n      return true;\n    }\n\n    if (!isEqual(this.props.textStyles, nextProps.textStyles)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const { disabled, selectedFonts, textStyles } = this.props;\n\n    return (\n      <div className=\"Elements\">\n        {ELEMENTS.map(element => (\n          <div className=\"element\" key={element}>\n            <p className=\"element-label\">&lt;{element}&gt;</p>\n\n            {element !== \"body\" ? (\n              <StylesInheritanceInput\n                disabled={disabled}\n                element={element}\n                inheritStyles={textStyles[element].inheritStyles}\n                stylesInheritanceChangeHandler={\n                  this.handleStylesInheritanceChange\n                }\n              />\n            ) : null}\n\n            {[\"font-family\", \"font-style\", \"font-weight\"].map(property => (\n              <StylingPropertySelectList\n                disabled={disabled}\n                element={element}\n                key={property}\n                property={property}\n                selectedFonts={selectedFonts}\n                options={getPropertyOptions(\n                  property,\n                  element,\n                  textStyles,\n                  selectedFonts\n                )}\n                value={getPropertyValue(textStyles, element, property)}\n              />\n            ))}\n\n            <ElementColor element={element} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst elementChecks = {\n  fontFamily: PropTypes.string.isRequired,\n  fontStyle: PropTypes.string.isRequired,\n  fontWeight: PropTypes.number.isRequired,\n  color: isPropTypeHexColor\n};\n\nElements.propTypes = {\n  disabled: PropTypes.bool,\n  selectedFonts: PropTypes.objectOf(\n    PropTypes.exact({\n      family: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n      variants: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      subsets: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n      fetching: PropTypes.bool.isRequired,\n      active: PropTypes.bool.isRequired,\n      requested: PropTypes.bool.isRequired,\n      prefetched: PropTypes.bool.isRequired,\n      fetched: PropTypes.bool.isRequired\n    }).isRequired\n  ).isRequired,\n  setStylesInheritance: PropTypes.func.isRequired,\n  textStyles: PropTypes.exact(\n    ELEMENTS.reduce((checks, element) => {\n      if (element === \"body\") {\n        checks[element] = PropTypes.exact(elementChecks).isRequired;\n      } else {\n        checks[element] = PropTypes.exact({\n          inheritStyles: PropTypes.bool.isRequired,\n          ...elementChecks\n        });\n      }\n\n      return checks;\n    }, {})\n  ).isRequired\n};\n\nconst mapStateToProps = state => ({\n  disabled: isControlDisabled(state),\n  selectedFonts: getSelectedFonts(state),\n  textStyles: getTextStyles(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setStylesInheritance: element => dispatch(setStylesInheritance(element))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Elements);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ColorPicker from \"./ColorPicker\";\nimport { isPropTypeHexColor, isControlDisabled } from \"../../utils\";\nimport { getBackground } from \"../../reducers/background\";\nimport { setBackgroundColor } from \"../../actions/background\";\nimport \"./styles/Background.css\";\n\nexport const Background = ({ background, disabled, setBackgroundColor }) => (\n  <div className=\"Background\">\n    <p className=\"label\">Background</p>\n    <ColorPicker\n      disabled={disabled}\n      colorChangeHandler={setBackgroundColor}\n      color={background.color}\n    />\n  </div>\n);\n\nBackground.propTypes = {\n  background: PropTypes.shape({\n    color: isPropTypeHexColor\n  }).isRequired,\n  disabled: PropTypes.bool.isRequired,\n  setBackgroundColor: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  background: getBackground(state),\n  disabled: isControlDisabled(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setBackgroundColor: ({ hex }) => dispatch(setBackgroundColor(hex))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Background);\n","import { SET_BACKGROUND_COLOR } from \"../constants\";\n\nexport const setBackgroundColor = (color = \"#fff\") => ({\n  type: SET_BACKGROUND_COLOR,\n  color\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Code from \"@material-ui/icons/CodeRounded\";\nimport \"./styles/GetCSSButton.css\";\n\nconst GetCSSButton = ({ disabled, getCSSButtonClickHandler }) => (\n  <button\n    className=\"GetCSSButton btn-blue-rect\"\n    disabled={disabled}\n    name=\"getStyles\"\n    onClick={getCSSButtonClickHandler}\n    title=\"Get CSS\"\n    value=\"getStyles\"\n  >\n    <span className=\"icon\">\n      <Code fontSize=\"small\" />\n    </span>\n    Get CSS\n  </button>\n);\n\nGetCSSButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  getCSSButtonClickHandler: PropTypes.func.isRequired\n};\n\nexport default GetCSSButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/ResetButton.css\";\n\nconst ResetButton = ({ disabled, resetButtonClickHandler }) => (\n  <button\n    className=\"ResetButton btn-no-background\"\n    disabled={disabled}\n    onClick={resetButtonClickHandler}\n    title=\"Reset styles\"\n    value=\"reset\"\n  >\n    Reset\n  </button>\n);\n\nResetButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  resetButtonClickHandler: PropTypes.func.isRequired\n};\n\nexport default ResetButton;\n","import { addNotification, removeNotification } from \"./notifications\";\nimport { SET_DEFAULT_STATE, UNDO_RESET } from \"../constants\";\n\nexport const setDefaultStyles = () => ({\n  type: SET_DEFAULT_STATE\n});\n\nexport const undoReset = () => ({\n  type: UNDO_RESET\n});\n\nexport const startSetDefaultStyles = () => {\n  return dispatch => {\n    // Reset custom styles\n    dispatch(setDefaultStyles());\n\n    const text = \"Styles has been reset\";\n    const group = \"styles\";\n    // Add notification to display it with \"undo\" option\n    dispatch(addNotification(text, group));\n  };\n};\n\nexport const startUndoReset = () => {\n  return dispatch => {\n    // Undo styles reset\n    dispatch(undoReset());\n\n    const group = \"styles\";\n    // Remove corresponding notification with \"undo\" option\n    dispatch(removeNotification(group));\n  };\n};\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport GetCSSButton from \"./GetCSSButton\";\nimport ResetButton from \"./ResetButton\";\nimport { getTypeScaleDefaultState } from \"../../reducers/typeScale\";\nimport { getTextStylesDefaultState } from \"../../reducers/textStyles\";\nimport { getBackgroundDefaultState } from \"../../reducers/background\";\nimport { isControlDisabled } from \"../../utils\";\nimport { startSetDefaultStyles } from \"../../actions/styles\";\nimport { displayStyles } from \"../../actions/showcase\";\nimport \"./styles/SettingsPaneFooter.css\";\n\nexport const SettingsPaneFooter = ({\n  isGetStylesDisabled,\n  isResetDisabled,\n  setDefaultStyles,\n  displayStyles\n}) => (\n  <div className=\"SettingsPaneFooter\">\n    <ResetButton\n      disabled={isResetDisabled}\n      resetButtonClickHandler={setDefaultStyles}\n    />\n    <GetCSSButton\n      disabled={isGetStylesDisabled}\n      getCSSButtonClickHandler={displayStyles}\n    />\n  </div>\n);\n\nSettingsPaneFooter.propTypes = {\n  isResetDisabled: PropTypes.bool.isRequired,\n  isGetStylesDisabled: PropTypes.bool.isRequired,\n  setDefaultStyles: PropTypes.func.isRequired,\n  displayStyles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  const stylesDefaults = {\n    typeScale: getTypeScaleDefaultState(),\n    textStyles: getTextStylesDefaultState(),\n    background: getBackgroundDefaultState()\n  };\n\n  return {\n    isResetDisabled: isControlDisabled(\n      state,\n      isEqual(state.styles.present, stylesDefaults)\n    ),\n    isGetStylesDisabled: isControlDisabled(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setDefaultStyles: () => dispatch(startSetDefaultStyles()),\n  displayStyles: () => dispatch(displayStyles())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SettingsPaneFooter);\n","import React from \"react\";\nimport TypeScaleContainer from \"./TypeScaleContainer\";\nimport Elements from \"./Elements\";\nimport Background from \"./Background\";\nimport SettingsPaneFooter from \"./SettingsPaneFooter\";\nimport \"./styles/SettingsPane.css\";\n\nconst SettingsPane = () => (\n  <div className=\"SettingsPane\">\n    <TypeScaleContainer />\n    <Elements />\n    <Background />\n    <SettingsPaneFooter />\n  </div>\n);\n\nexport default SettingsPane;\n","import React from \"react\";\nimport FontsPane from \"./fontsPane/FontsPane\";\nimport ShowcasePane from \"./showcasePane/ShowcasePane\";\nimport SettingsPane from \"./settingsPane/SettingsPane\";\nimport \"./styles/Main.css\";\n\nconst Main = () => (\n  <main className=\"Main\">\n    <FontsPane />\n    <ShowcasePane />\n    <SettingsPane />\n  </main>\n);\n\nexport default Main;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/UndoButton.css\";\n\nconst UndoButton = ({ onClickHandler }) => (\n  <button\n    className=\"UndoButton btn\"\n    onClick={onClickHandler}\n    value=\"undo\"\n    title=\"Undo\"\n  >\n    Undo\n  </button>\n);\n\nUndoButton.propTypes = {\n  onClickHandler: PropTypes.func.isRequired\n};\n\nexport default UndoButton;\n","import React, { PureComponent } from \"react\";\nimport classNames from \"classnames\";\nimport ClearOutlined from \"@material-ui/icons/ClearOutlined\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { TIMEOUT } from \"../../constants\";\nimport UndoButton from \"./UndoButton\";\nimport \"./styles/NotificationSnackbar.css\";\n\nexport class NotificationSnackbar extends PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      stage: \"elevate\",\n      timerId: undefined\n    };\n    this.handleAnimationEnd = this.handleAnimationEnd.bind(this);\n    this.handleUndoButtonClick = this.handleUndoButtonClick.bind(this);\n    this.handleCloseIconClick = this.handleCloseIconClick.bind(this);\n  }\n\n  handleAnimationEnd() {\n    const { group, removeNotification, undoActionHandler } = this.props;\n\n    const handlers = {\n      elevate: () => this.setTimer(),\n      drop: removeNotification,\n      undo: undoActionHandler\n    };\n    const { stage } = this.state;\n\n    if (this.state.stage === \"drop\") {\n      handlers[stage](group);\n    } else {\n      handlers[stage]();\n    }\n  }\n\n  handleUndoButtonClick() {\n    this.clearTimer(\"undo\");\n  }\n\n  handleCloseIconClick() {\n    this.clearTimer(\"drop\");\n  }\n\n  setTimer() {\n    const timerId = setTimeout(() => {\n      this.clearTimer(\"drop\");\n    }, TIMEOUT);\n\n    this.setState({\n      stage: \"display\",\n      timerId\n    });\n  }\n\n  clearTimer(stage) {\n    clearTimeout(this.state.timerId);\n\n    this.setState({\n      stage,\n      timerId: undefined\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { stage } = this.state;\n    const { pending } = this.props.notification;\n    if (stage === \"display\" && pending) {\n      this.clearTimer(\"drop\");\n    }\n\n    // Group's state change triggers notification stage change\n    if (this.props.groupState) {\n      const { groupState } = this.props;\n      const { groupState: prevGroupState } = prevProps;\n      const isStateWentForward = groupState.length > prevGroupState.length;\n      if (isStateWentForward && this.state.stage === \"display\") {\n        this.clearTimer(\"drop\");\n      }\n    }\n  }\n\n  render() {\n    const { current: notification } = this.props.notification;\n    const { stage } = this.state;\n    const componentClasses = classNames({\n      NotificationSnackbar: true,\n      [stage]: true\n    });\n\n    return (\n      <div\n        className={componentClasses}\n        onAnimationEnd={this.handleAnimationEnd}\n      >\n        <p className=\"notification\">{notification}</p>\n        <div className=\"controls\">\n          {this.props.undoActionHandler ? (\n            <UndoButton onClickHandler={this.handleUndoButtonClick} />\n          ) : null}\n          <button\n            className=\"btn btn-round-small close-icon\"\n            onClick={this.handleCloseIconClick}\n            title=\"Close\"\n            value=\"close\"\n          >\n            <ClearOutlined fontSize=\"small\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nNotificationSnackbar.propTypes = {\n  notification: PropTypes.exact({\n    current: PropTypes.string.isRequired,\n    pending: PropTypes.string.isRequired\n  }).isRequired,\n  group: PropTypes.string.isRequired,\n  removeNotification: PropTypes.func.isRequired,\n  undoActionHandler: PropTypes.func,\n  groupState: PropTypes.any\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  groupState:\n    state[ownProps.group] && \"present\" in state[ownProps.group]\n      ? state[ownProps.group].present\n      : undefined\n});\n\nexport default connect(mapStateToProps)(NotificationSnackbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport NotificationSnackbar from \"./NotificationSnackbar\";\nimport { startUndoDeselected } from \"../../actions/selectedFonts\";\nimport { startUndoReset } from \"../../actions/styles\";\nimport { removeNotification } from \"../../actions/notifications\";\nimport \"./styles/Notifications.css\";\n\nexport const Notifications = ({\n  notifications,\n  removeNotification,\n  ...rest\n}) => {\n  return (\n    <div className=\"Notifications\">\n      {Object.keys(notifications).map(group =>\n        notifications[group].current ? (\n          <NotificationSnackbar\n            key={notifications[group].current}\n            group={group}\n            notification={notifications[group]}\n            undoActionHandler={rest[group]}\n            removeNotification={removeNotification}\n          />\n        ) : null\n      )}\n    </div>\n  );\n};\n\nNotifications.propTypes = {\n  notifications: PropTypes.objectOf(\n    PropTypes.exact({\n      current: PropTypes.string.isRequired,\n      pending: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  removeNotification: PropTypes.func.isRequired,\n  selectedFonts: PropTypes.func.isRequired,\n  styles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  notifications: state.notifications\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      selectedFonts: startUndoDeselected,\n      styles: startUndoReset,\n      removeNotification\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Notifications);\n","import React from \"react\";\nimport Header from \"./header/Header\";\nimport Main from \"./Main\";\nimport Notifications from \"./notifications/Notifications\";\nimport \"./styles/App.css\";\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Main />\n    <Notifications />\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport typeScale from \"../reducers/typeScale\";\nimport textStyles from \"../reducers/textStyles\";\nimport background from \"../reducers/background\";\nimport { SET_DEFAULT_STATE, UNDO_RESET } from \"../constants\";\n\nconst styles = combineReducers({\n  typeScale,\n  textStyles,\n  background\n});\n\nexport default undoable(styles, {\n  limit: 1,\n  filter: includeAction(SET_DEFAULT_STATE),\n  undoType: UNDO_RESET\n});\n","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../constants\";\n\nconst groups = [\"selectedFonts\", \"styles\", \"clipboard\"];\n\nconst initialState = groups.reduce((res, group) => {\n  res[group] = {\n    current: \"\",\n    pending: \"\"\n  };\n  return res;\n}, {});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NOTIFICATION:\n      return {\n        ...state,\n        [action.group]: {\n          current: state[action.group].pending\n            ? state[action.group].pending\n            : state[action.group].current || action.text,\n          pending: !state[action.group].current ? \"\" : action.text\n        }\n      };\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        [action.group]: {\n          current: state[action.group].pending,\n          pending: \"\"\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport fonts from \"../reducers/fonts\";\nimport filters from \"../reducers/filters\";\nimport selectedFonts from \"../reducers/selectedFonts\";\nimport showcase from \"../reducers/showcase\";\nimport styles from \"../reducers/styles\";\nimport notifications from \"../reducers/notifications\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      fonts,\n      filters,\n      selectedFonts,\n      showcase,\n      styles,\n      notifications\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\nimport configureStore from \"./store/configureStore\";\nimport { startFetchFontsData } from \"./actions/fonts\";\nimport \"./index.css\";\n\nexport const store = configureStore();\n\nexport const renderApp = () => {\n  const jsx = (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n  ReactDOM.render(jsx, document.getElementById(\"root\"));\n\n  store.dispatch(startFetchFontsData());\n};\n\nrenderApp();\n\nserviceWorker.register();\n"],"sourceRoot":""}